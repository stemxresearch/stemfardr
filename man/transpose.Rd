% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stm_transpose.R
\name{stm_transpose}
\alias{stm_transpose}
\alias{stm_t}
\title{Transpose data frame, matrix, or tibble}
\usage{
stm_transpose(dat)

stm_t(dat)
}
\arguments{
\item{dat}{A matrix, data frame, or tibble to be transposed.}
}
\value{
The transposed \code{dat}, either as a matrix, data frame,
        or tibble.
}
\description{
\code{stm_transpose()} transposes a data frame, matrix, or tibble, 
converting it into the appropriate format after transposition.
}
\details{
The function first checks the class of \code{dat} and transposes it 
accordingly. If it's a data frame, it converts it into a standard data 
frame after transposition. If it's a tibble, it also cleans up the column 
names using \code{janitor::clean_names()}. If the data is a matrix or 
vector, it is directly transposed.
}
\examples{
# Matrix example
A <- matrix(11:22, nrow = 3, byrow = TRUE)
print(A)
stm_transpose(A)

# Data frame example
df <- data.frame(
  A = c(1, 2, 3),
  B = c(4, 5, 6)
)
print(df)
stm_transpose(df)

# Tibble example
library(tibble)
tbl <- tibble(
  A = c(1, 2, 3),
  B = c(4, 5, 6)
)
print(tbl)
stm_transpose(tbl)

}
