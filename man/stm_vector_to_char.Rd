% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stm_vector_to_char.R
\name{stm_vector_to_char}
\alias{stm_vector_to_char}
\title{Convert vector to a character string}
\usage{
stm_vector_to_char(vec, find_char, is_stop = FALSE, par_name = "vec")
}
\arguments{
\item{vec}{A vector of values to be converted to a character string.
The vector is assumed to contain non-numeric values.}

\item{find_char}{A character to check against the vector. If \code{is_stop} 
is \code{TRUE}, the function will stop if \code{find_char} 
is not in \code{vec}.}

\item{is_stop}{A logical value. If \code{TRUE}, an error is raised if the 
\code{find_char} is not found in \code{vec}.}

\item{par_name}{A string used in error and warning messages to refer to 
the parameter. Defaults to \code{"vec"}.}
}
\value{
The function returns the vector as a single concatenated character 
        string, or stops if \code{is_stop} is \code{TRUE} and the character 
        is not found in the vector.
}
\description{
\code{stm_vector_to_char()} takes a vector and converts it into a character 
string. Optionally, if \code{is_stop} is \code{TRUE}, it checks if the 
specified character is in the vector and raises an error if not.
}
\details{
The function first checks whether the input vector is valid and then 
concatenates it into a single string. If \code{is_stop} is \code{TRUE}, 
the function checks whether \code{find_char} is in the vector and stops 
execution if it is not.
}
\examples{
fruits <- c("apple", "banana", "cherry")
print(fruits)
stm_vector_to_char(fruits, find_char = "apple")
colors <- c("red", "blue", "green")
print(colors)
stm_vector_to_char(colors, find_char = "Blue")

}
