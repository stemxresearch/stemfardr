% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stm_descriptive_grouped.R
\name{stm_descriptive_grouped}
\alias{stm_descriptive_grouped}
\title{Compute grouped data statistics}
\usage{
stm_descriptive_grouped(
  statistic = c("mean", "variance", "std", "median", "mode", "lower_quartile",
    "upper_quartile", "percentile", "iqr", "polygon", "histogram", "orgive"),
  class_limits,
  frequency,
  assumed_mean = NULL,
  is_assumed_divide = TRUE,
  digits = 4
)
}
\arguments{
\item{statistic}{Character; the statistic to compute.}

\item{class_limits}{Numeric vector; the class limits for grouped data,
given as pairs of lower and upper bounds. This vector
must have an even number of elements.}

\item{frequency}{Numeric vector; the frequencies corresponding to each class
interval. Must match the number of classes derived from
\code{class_limits}.}

\item{assumed_mean}{Logical or numeric; if \code{TRUE}, the assumed mean
is computed automatically. If \code{FALSE},
calculations are performed without an assumed mean.
If numeric, it specifies a custom assumed mean. 
Defaults to \code{TRUE}.}

\item{is_assumed_divide}{Logical; if \code{TRUE}, divides certain values by
the class width in the calculations. Defaults to
\code{TRUE}.}

\item{digits}{Integer; the number of decimal places to round the result.
Defaults to 4.}
}
\value{
A data frame containing:
  \item{lower}{Lower class limits}
  \item{upper}{Upper class limits}
  \item{mid_point}{Class midpoints}
  \item{f}{Frequencies}
  \item{fx}{Product of frequency and midpoints,
  if \code{assumed_mean = FALSE}}
  \item{tt}{Transformed midpoints, if \code{assumed_mean = TRUE}}
  \item{ft}{Product of frequency and transformed midpoints,
  if \code{assumed_mean = TRUE}}
}
\description{
\code{grouped_data_statistics()} statistical summaries for grouped data
using class limits and frequencies. The function generates midpoints,
frequency products, and optionally adjusts calculations based on an assumed
mean and class width.
}
\examples{
class_limits <- c(
  100, 103, 104, 107, 108, 111, 112, 115, 116, 119, 120, 123
)
freq <- c(1, 15, 42, 31, 8, 3)

result <- stm_descriptive_grouped(
  statistic = "mean",
  class_limits = class_limits,
  frequency = freq
)
stm_gtable(result)

}
