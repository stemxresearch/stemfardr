% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stm_linlog_range.R
\name{stm_arange}
\alias{stm_arange}
\title{Generate a sequence of values}
\usage{
stm_arange(from = NULL, to = NULL, by = 1, include_last = FALSE, digits = NULL)
}
\arguments{
\item{from}{Numeric value. The starting value of the sequence. Defaults to 
\code{1} if \code{to} is provided and \code{from} is NULL.}

\item{to}{Numeric value. The end value of the sequence.}

\item{by}{Numeric value. The step size between consecutive values. 
Default is \code{1}.}

\item{include_last}{Logical value. If \code{TRUE}, the sequence will 
include the last value \code{to} if it's not already 
included. Default is \code{FALSE}.}

\item{digits}{Optional. Number of decimal places to round the sequence.}
}
\value{
A numeric vector of values from \code{from} to \code{to}, 
        spaced by \code{by}.
}
\description{
\code{stm_arange()} generates a sequence of values from \code{from} to 
\code{to} with a specified step size (\code{by}), optionally including 
the last value \code{to} if it is not already in the sequence.
}
\details{
This function generates a sequence of values similar to 
         \code{seq()}, with the ability to include the last value 
         (\code{to}) if it is not already present in the sequence.
}
\examples{
stm_arange(from = 1, to = 10, by = 2)
stm_arange(to = 10)
stm_arange(from = 10) # sequence will start from 1 to 10
stm_arange(from = 1, to = 5, by = 0.25)
stm_arange(from = 1, to = 8, by = 2, include_last = TRUE)

}
\seealso{
\code{\link{stm_linspace}}, \code{\link{stm_logspace}}, \code{\link{seq}}, \code{\link{seq_along}}, \code{\link{seq_len}}
}
