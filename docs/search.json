[{"path":"https://stemxresearch.github.io/rstem/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Indika. Author, maintainer.","code":""},{"path":"https://stemxresearch.github.io/rstem/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Indika J (2025). rstemlab: R Library Numerical Analysis Computing STEM. R package version 0.1.0.","code":"@Manual{,   title = {rstemlab: An R Library for Numerical Analysis and Computing in STEM},   author = {John Indika},   year = {2025},   note = {R package version 0.1.0}, }"},{"path":"https://stemxresearch.github.io/rstem/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"An R Library for Numerical Analysis and Computing in STEM","text":"rstemlab comprehensive R library designed numerical analysis computing STEM fields. provides tools solving equations, performing simulations, analyzing data, visualizing results, empowering researchers students science, technology, engineering, mathematics.","code":""},{"path":"https://stemxresearch.github.io/rstem/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Library for Numerical Analysis and Computing in STEM","text":"","code":"install.packages(\"devtools\") devtools::install_github(\"stemxresearch/rstemlab\")"},{"path":"https://stemxresearch.github.io/rstem/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An R Library for Numerical Analysis and Computing in STEM","text":"use rstemlab package, must start loading using library() function shown .","code":"library(rstemlab)"},{"path":"https://stemxresearch.github.io/rstem/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"An R Library for Numerical Analysis and Computing in STEM","text":"Click Get Started link top menu follow link Getting started quick tutorial rstemlab library.","code":""},{"path":"https://stemxresearch.github.io/rstem/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"An R Library for Numerical Analysis and Computing in STEM","text":"Reference menu top menu page provides list functions available rstemlab package help documentation including syntax examples.","code":""},{"path":"https://stemxresearch.github.io/rstem/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"An R Library for Numerical Analysis and Computing in STEM","text":"encounter clear bug, please file issue minimal reproducible example GitHub.","code":""},{"path":"https://stemxresearch.github.io/rstem/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"An R Library for Numerical Analysis and Computing in STEM","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://stemxresearch.github.io/rstem/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rstemlab authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert values into a matrix or vector — stm_insert","title":"Insert values into a matrix or vector — stm_insert","text":"stm_insert() variants insert value(s) matrix vector specified location. function allows inserting data either rows columns, simply appending values end.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert values into a matrix or vector — stm_insert","text":"","code":"stm_insert(dat, insert_at = length(dat), values, axis = NULL)  stm_insert_vector(vec, insert_at = length(vec), values)  stm_insert_rows(mat, insert_at = length(mat), values)  stm_insert_cols(mat, insert_at = length(mat), values)"},{"path":"https://stemxresearch.github.io/rstem/reference/insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert values into a matrix or vector — stm_insert","text":"dat matrix, vector, array new value(s) added. stm_insert Can vector matrix. stm_insert_vector Specifically vector. stm_insert_rows Specifically matrix. stm_insert_cols Specifically matrix. insert_at Optional. location insert new value(s). length(dat), value(s) inserted end matrix vector. values value(s) insert new columns rows. axis Optional. axis along insert values: 0 rows, 1 columns. Default NULL, meaning values inserted vector. vec vector values. mat matrix values.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert values into a matrix or vector — stm_insert","text":"matrix vector new value(s) inserted specified         location.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/insert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert values into a matrix or vector — stm_insert","text":"","code":"v <- 11:22 print(v) #>  [1] 11 12 13 14 15 16 17 18 19 20 21 22 stm_insert(v, insert_at = 3, values = 101:103) #>  [1]  11  12 101 102 103  13  14  15  16  17  18  19  20  21  22  A <- matrix(dat = v, nrow = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]   11   12   13   14 #> [2,]   15   16   17   18 #> [3,]   19   20   21   22 stm_insert(A, insert_at = 1, values = 101:104, axis = 0) #>      [,1] [,2] [,3] [,4] #> [1,]  101  102  103  104 #> [2,]   11   12   13   14 #> [3,]   15   16   17   18 #> [4,]   19   20   21   22  A <- matrix(dat = 11:22, nrow = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]   11   12   13   14 #> [2,]   15   16   17   18 #> [3,]   19   20   21   22 stm_insert(A, insert_at = 3, values = 101:103, axis = 1) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   11   12  101   13   14 #> [2,]   15   16  102   17   18 #> [3,]   19   20  103   21   22  stm_insert_vector(11:22, insert_at = 1, values = 101:104) #>  [1] 101 102 103 104  11  12  13  14  15  16  17  18  19  20  21  22 A <- matrix(dat = 11:22, nrow = 3, byrow = TRUE) stm_insert_rows(A, insert_at = 1, values = 101:104) #>      [,1] [,2] [,3] [,4] #> [1,]  101  102  103  104 #> [2,]   11   12   13   14 #> [3,]   15   16   17   18 #> [4,]   19   20   21   22  A <- matrix(dat = 11:22, nrow = 3, byrow = TRUE) stm_insert_cols(A, insert_at = 3, values = 101:103) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   11   12  101   13   14 #> [2,]   15   16  102   17   18 #> [3,]   19   20  103   21   22"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_12th_root_of_root2.html","id":null,"dir":"Reference","previous_headings":"","what":"Twelfth root of root 2 — stm_12th_root_of_root2","title":"Twelfth root of root 2 — stm_12th_root_of_root2","text":"predefined constant 12th root root 2: sqrt(2)^(1/12).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_12th_root_of_root2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Twelfth root of root 2 — stm_12th_root_of_root2","text":"","code":"stm_12th_root_of_root2"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_12th_root_of_root2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Twelfth root of root 2 — stm_12th_root_of_root2","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_2_root_2.html","id":null,"dir":"Reference","previous_headings":"","what":"2 raised to root 2 — stm_2_root_2","title":"2 raised to root 2 — stm_2_root_2","text":"predefined constant 2 raised power sqrt(2): 2^sqrt(2).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_2_root_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2 raised to root 2 — stm_2_root_2","text":"","code":"stm_2_root_2"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_2_root_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"2 raised to root 2 — stm_2_root_2","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_arange.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sequence of values — stm_arange","title":"Generate a sequence of values — stm_arange","text":"stm_arange() generates sequence values specified step size (), optionally including last value already sequence.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_arange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sequence of values — stm_arange","text":"","code":"stm_arange(from = NULL, to = NULL, by = 1, include_last = FALSE, digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_arange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sequence of values — stm_arange","text":"Numeric value. starting value sequence. Defaults 1 provided NULL. Numeric value. end value sequence. Numeric value. step size consecutive values. Default 1. include_last Logical value. TRUE, sequence include last value already included. Default FALSE. digits Optional. Number decimal places round sequence.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_arange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sequence of values — stm_arange","text":"numeric vector values ,         spaced .","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_arange.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a sequence of values — stm_arange","text":"function generates sequence values similar          seq(), ability include last value          () already present sequence.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_arange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a sequence of values — stm_arange","text":"","code":"stm_arange(from = 1, to = 10, by = 2) #> [1] 1 3 5 7 9 stm_arange(to = 10) #>  [1]  1  2  3  4  5  6  7  8  9 10 stm_arange(from = 10) # sequence will start from 1 to 10 #>  [1]  1  2  3  4  5  6  7  8  9 10 stm_arange(from = 1, to = 5, by = 0.25) #>  [1] 1.00 1.25 1.50 1.75 2.00 2.25 2.50 2.75 3.00 3.25 3.50 3.75 4.00 4.25 4.50 #> [16] 4.75 5.00 stm_arange(from = 1, to = 8, by = 2, include_last = TRUE) #> [1] 1 3 5 7 8"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_charpoly.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the characteristic polynomial of a matrix — stm_charpoly","title":"Compute the characteristic polynomial of a matrix — stm_charpoly","text":"stm_charpoly() calculates characteristic polynomial square matrix optionally returns polynomial equation.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_charpoly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the characteristic polynomial of a matrix — stm_charpoly","text":"","code":"stm_charpoly(x, equation = FALSE, variable = \"x\", digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_charpoly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the characteristic polynomial of a matrix — stm_charpoly","text":"x square matrix characteristic polynomial computed. equation Logical. TRUE, polynomial returned string equation. Default FALSE. variable string specifying variable used polynomial. Default \"x\". digits Optional. integer specifying number decimal places round result. Default NULL, means rounding.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_charpoly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the characteristic polynomial of a matrix — stm_charpoly","text":"numeric vector polynomial coefficients string representation         polynomial equation = TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_charpoly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the characteristic polynomial of a matrix — stm_charpoly","text":"function calculates characteristic polynomial square matrix using pracma::charpoly(). equation = TRUE, coefficients formatted polynomial equation.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_charpoly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the characteristic polynomial of a matrix — stm_charpoly","text":"","code":"A <- matrix(c(4, 1, 2, 3), nrow = 2) stm_charpoly(A) #> [1]  1 -7 10 stm_charpoly(A, equation = TRUE) #> [1] \"1 * x^3 - 7 * x^2 + 10 * x^1\" stm_charpoly(A, equation = TRUE, variable = \"t\") #> [1] \"1 * t^3 - 7 * t^2 + 10 * t^1\""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_companion.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the companion matrix from a given vector — stm_companion","title":"Compute the companion matrix from a given vector — stm_companion","text":"stm_companion() computes companion matrix given vector generating matrix form linear recurrence relation.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_companion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the companion matrix from a given vector — stm_companion","text":"","code":"stm_companion(vec)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_companion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the companion matrix from a given vector — stm_companion","text":"vec numeric vector. first element represents coefficient highest degree term.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_companion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the companion matrix from a given vector — stm_companion","text":"companion matrix constructed input vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_companion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the companion matrix from a given vector — stm_companion","text":"companion matrix created vector setting first row negative elements (except first) divided first element, setting subdiagonal elements 1.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_companion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the companion matrix from a given vector — stm_companion","text":"","code":"v <- c(2, 8, 5, 10, 18) print(v) #> [1]  2  8  5 10 18 stm_companion(v) #>      [,1] [,2] [,3] [,4] #> [1,]   -4 -2.5   -5   -9 #> [2,]    1  0.0    0    0 #> [3,]    0  1.0    0    0 #> [4,]    0  0.0    1    0"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a constant matrix — stm_constant","title":"Create a constant matrix — stm_constant","text":"stm_constant() creates matrix specified size elements constant value. constant value provided, one randomly selected range -5 9.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a constant matrix — stm_constant","text":"","code":"stm_constant(k = NULL, nrows = 1, ncols = nrows, digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a constant matrix — stm_constant","text":"k constant value fill matrix. NULL, random value selected range -5 9. nrows number rows matrix. Must least 1. ncols number columns matrix. Must least 1. digits Optional. number decimal places round matrix values. Default NULL.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a constant matrix — stm_constant","text":"matrix filled constant value k.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a constant matrix — stm_constant","text":"function creates matrix specified size, elements filled constant value k. value specified, one randomly selected range -5 9.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a constant matrix — stm_constant","text":"","code":"stm_constant(k = 3, nrows = 4) #>      [,1] [,2] [,3] [,4] #> [1,]    3    3    3    3 #> [2,]    3    3    3    3 #> [3,]    3    3    3    3 #> [4,]    3    3    3    3 stm_constant(nrows = 3, ncols = 5) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    7    7    7    7    7 #> [2,]    7    7    7    7    7 #> [3,]    7    7    7    7    7"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a constant matrix or vector like an existing matrix or vector — stm_constant_like","title":"Generate a constant matrix or vector like an existing matrix or vector — stm_constant_like","text":"stm_constant_like() generates constant matrix vector matches dimensions provided input matrix vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a constant matrix or vector like an existing matrix or vector — stm_constant_like","text":"","code":"stm_constant_like(vmat, k = 2)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a constant matrix or vector like an existing matrix or vector — stm_constant_like","text":"vmat matrix vector whose dimensions used generate constant matrix vector. k numeric value representing constant fill generated matrix vector. Default 2.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a constant matrix or vector like an existing matrix or vector — stm_constant_like","text":"matrix vector dimensions vmat, filled         constant value k.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant_like.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a constant matrix or vector like an existing matrix or vector — stm_constant_like","text":"function checks validity input vmat k, converting vmat matrix vector. generates matrix size vmat filled constant value k.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_constant_like.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a constant matrix or vector like an existing matrix or vector — stm_constant_like","text":"","code":"A <- matrix(1:12, nrow = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    5    6    7    8 #> [3,]    9   10   11   12 stm_constant_like(A, k = 5) #>      [,1] [,2] [,3] [,4] #> [1,]    5    5    5    5 #> [2,]    5    5    5    5 #> [3,]    5    5    5    5 stm_constant_like(c(1, 2, 3), k = 7) #>      [,1] #> [1,]    7 #> [2,]    7 #> [3,]    7"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_cuberoot_of_root2.html","id":null,"dir":"Reference","previous_headings":"","what":"Cube root of root 2 — stm_cuberoot_of_root2","title":"Cube root of root 2 — stm_cuberoot_of_root2","text":"predefined constant cube root root 2: sqrt(2)^(1/3).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_cuberoot_of_root2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cube root of root 2 — stm_cuberoot_of_root2","text":"","code":"stm_cuberoot_of_root2"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_cuberoot_of_root2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cube root of root 2 — stm_cuberoot_of_root2","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_cuberoot_of_root3.html","id":null,"dir":"Reference","previous_headings":"","what":"Cube root of root 3 — stm_cuberoot_of_root3","title":"Cube root of root 3 — stm_cuberoot_of_root3","text":"predefined constant cube root root 3: sqrt(3)^(1/3).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_cuberoot_of_root3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cube root of root 3 — stm_cuberoot_of_root3","text":"","code":"stm_cuberoot_of_root3"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_cuberoot_of_root3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cube root of root 3 — stm_cuberoot_of_root3","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_deg_to_radians.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert degrees to radians — stm_deg_to_radians","title":"Convert degrees to radians — stm_deg_to_radians","text":"stm_deg_to_radians() converts value degrees radians. result can rounded specified number decimal places.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_deg_to_radians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert degrees to radians — stm_deg_to_radians","text":"","code":"stm_deg_to_radians(degrees, digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_deg_to_radians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert degrees to radians — stm_deg_to_radians","text":"degrees numeric value representing angle degrees. digits Optional. number decimal places round result. Default NULL rounding.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_deg_to_radians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert degrees to radians — stm_deg_to_radians","text":"value radians, rounded specified number decimal         places digits provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_deg_to_radians.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert degrees to radians — stm_deg_to_radians","text":"function converts given angle degrees radians multiplying pi / 180. digits specified, result rounded number decimal places.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_deg_to_radians.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert degrees to radians — stm_deg_to_radians","text":"","code":"stm_deg_to_radians(90) #> [1] 1.570796 stm_deg_to_radians(c(0, 45, 90)) #> [1] 0.0000000 0.7853982 1.5707963 stm_deg_to_radians(180, digits = 2) #> [1] 3.14"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete specified columns from a data frame — stm_delete_cols","title":"Delete specified columns from a data frame — stm_delete_cols","text":"stm_delete_cols() removes specified columns data frame. uses stm_transform_keep_delete() perform operation.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete specified columns from a data frame — stm_delete_cols","text":"","code":"stm_delete_cols(dat, indices, as_matrix = TRUE)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete specified columns from a data frame — stm_delete_cols","text":"dat data frame matrix columns removed. indices numeric vector logical vector indicating columns delete. as_matrix Optional. logical value indicating whether result returned matrix. Default TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete specified columns from a data frame — stm_delete_cols","text":"data frame matrix specified columns removed.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete specified columns from a data frame — stm_delete_cols","text":"function uses stm_transform_keep_delete() remove specified columns given data. as_matrix TRUE, result returned matrix, otherwise data frame returned.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete specified columns from a data frame — stm_delete_cols","text":"","code":"A <- matrix(1:15, ncol = 5, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    2    3    4    5 #> [2,]    6    7    8    9   10 #> [3,]   11   12   13   14   15 stm_delete_cols(A, 2) #>      [,1] [,2] [,3] [,4] #> [1,]    1    3    4    5 #> [2,]    6    8    9   10 #> [3,]   11   13   14   15"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete specific rows from a data frame or matrix — stm_delete_rows","title":"Delete specific rows from a data frame or matrix — stm_delete_rows","text":"stm_delete_rows() deletes specified rows data frame matrix based provided indices.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete specific rows from a data frame or matrix — stm_delete_rows","text":"","code":"stm_delete_rows(dat, indices, as_matrix = TRUE)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete specific rows from a data frame or matrix — stm_delete_rows","text":"dat data frame matrix rows deleted. indices vector row indices delete. as_matrix logical value indicating whether result converted matrix. Default TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete specific rows from a data frame or matrix — stm_delete_rows","text":"data frame matrix specified rows deleted.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete specific rows from a data frame or matrix — stm_delete_rows","text":"function uses stm_transform_keep_delete() remove rows specified indices. result can optionally returned matrix based as_matrix argument.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_delete_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete specific rows from a data frame or matrix — stm_delete_rows","text":"","code":"A <- matrix(1:15, ncol = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    4    5    6 #> [3,]    7    8    9 #> [4,]   10   11   12 #> [5,]   13   14   15 stm_delete_rows(A, 2) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    7    8    9 #> [3,]   10   11   12 #> [4,]   13   14   15 stm_delete_rows(A, c(1, 3)) #>      [,1] [,2] [,3] #> [1,]    4    5    6 #> [2,]   10   11   12 #> [3,]   13   14   15"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_descriptive_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute grouped data statistics — stm_descriptive_grouped","title":"Compute grouped data statistics — stm_descriptive_grouped","text":"grouped_data_statistics() statistical summaries grouped data using class limits frequencies. function generates midpoints, frequency products, optionally adjusts calculations based assumed mean class width.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_descriptive_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute grouped data statistics — stm_descriptive_grouped","text":"","code":"stm_descriptive_grouped(   statistic = c(\"mean\", \"variance\", \"std\", \"median\", \"mode\", \"lower_quartile\",     \"upper_quartile\", \"percentile\", \"iqr\", \"polygon\", \"histogram\", \"orgive\"),   class_limits,   frequency,   assumed_mean = NULL,   is_assumed_divide = TRUE,   digits = 4 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_descriptive_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute grouped data statistics — stm_descriptive_grouped","text":"statistic Character; statistic compute. class_limits Numeric vector; class limits grouped data, given pairs lower upper bounds. vector must even number elements. frequency Numeric vector; frequencies corresponding class interval. Must match number classes derived class_limits. assumed_mean Logical numeric; TRUE, assumed mean computed automatically. FALSE, calculations performed without assumed mean. numeric, specifies custom assumed mean. Defaults TRUE. is_assumed_divide Logical; TRUE, divides certain values class width calculations. Defaults TRUE. digits Integer; number decimal places round result. Defaults 4.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_descriptive_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute grouped data statistics — stm_descriptive_grouped","text":"data frame containing: lower Lower class limits upper Upper class limits mid_point Class midpoints f Frequencies fx Product frequency midpoints,   assumed_mean = FALSE tt Transformed midpoints, assumed_mean = TRUE ft Product frequency transformed midpoints,   assumed_mean = TRUE","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_descriptive_grouped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute grouped data statistics — stm_descriptive_grouped","text":"","code":"class_limits <- c(   100, 103, 104, 107, 108, 111, 112, 115, 116, 119, 120, 123 ) freq <- c(1, 15, 42, 31, 8, 3)  result <- stm_descriptive_grouped(   statistic = \"mean\",   class_limits = class_limits,   frequency = freq ) stm_gtable(result)     lower       upper       mid_point       f       fx     100 103 101.5 1 101.5104 107 105.5 15 1582.5108 111 109.5 42 4599.0112 115 113.5 31 3518.5116 119 117.5 8 940.0120 123 121.5 3 364.5"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_diag.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagonal matrix or vector with offset — stm_diag","title":"Diagonal matrix or vector with offset — stm_diag","text":"stm_diag() extracts diagonal elements matrix vector, allowing optional offset, returns result matrix vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagonal matrix or vector with offset — stm_diag","text":"","code":"stm_diag(vmat, k = 0)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagonal matrix or vector with offset — stm_diag","text":"vmat vector matrix diagonal extracted. matrix, function extracts diagonal elements, optional offset k. k Optional. integer specifying diagonal offset. default 0 main diagonal. positive value retrieves diagonals main diagonal, negative value retrieves diagonals main diagonal.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_diag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagonal matrix or vector with offset — stm_diag","text":"vector matrix extracted diagonal elements,         empty numeric vector elements present.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_diag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagonal matrix or vector with offset — stm_diag","text":"function extracts diagonal elements input vmat optional offset. offset k shifts diagonal. k positive, retrieves diagonals main diagonal; negative, retrieves diagonals main diagonal. vmat matrix, output matrix; vector, result vector.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_diag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagonal matrix or vector with offset — stm_diag","text":"","code":"A <- matrix(1:12, nrow = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    5    6    7    8 #> [3,]    9   10   11   12 stm_diag(A) #> [1]  1  6 11 stm_diag(vmat = c(1, 2, 3)) #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    2    0 #> [3,]    0    0    3 stm_diag(vmat = c(1, 2, 3), k = 2) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    1    0    0 #> [2,]    0    0    0    2    0 #> [3,]    0    0    0    0    3 #> [4,]    0    0    0    0    0 #> [5,]    0    0    0    0    0 stm_diag(vmat = c(1, 2, 3), k = -1) #>      [,1] [,2] [,3] [,4] #> [1,]    0    0    0    0 #> [2,]    1    0    0    0 #> [3,]    0    2    0    0 #> [4,]    0    0    3    0"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set default number of digits for computation — stm_digits","title":"Set default number of digits for computation — stm_digits","text":"stm_digits() determines number decimal digits used computations, providing default value valid input supplied.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set default number of digits for computation — stm_digits","text":"","code":"stm_digits(digits = 14)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set default number of digits for computation — stm_digits","text":"digits integer specifying number decimal digits. Default 14.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set default number of digits for computation — stm_digits","text":"integer representing number decimal digits use.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set default number of digits for computation — stm_digits","text":"function checks provided digits parameter valid integer. input invalid NULL, function defaults 14 decimal digits.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set default number of digits for computation — stm_digits","text":"","code":"stm_digits(10) #> [1] 10  stm_digits(NULL) #> [1] 14  stm_digits(\"abc\") #> [1] 14  stm_digits() #> [1] 14"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits_from_tol.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine number of decimal digits from tolerance — stm_digits_from_tol","title":"Determine number of decimal digits from tolerance — stm_digits_from_tol","text":"stm_digits_from_tol() calculates number decimal digits required either based specified numeric tolerance analyzing maximum number decimal places given numeric vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits_from_tol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine number of decimal digits from tolerance — stm_digits_from_tol","text":"","code":"stm_digits_from_tol(vec, tol = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits_from_tol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine number of decimal digits from tolerance — stm_digits_from_tol","text":"vec numeric vector calculate number decimal digits. vector analyzed determine maximum number decimal places tol NULL invalid. tol Numeric tolerance used determine number decimal digits.            Default 1e-16, corresponds 16 decimal points.            tol invalid (e.g., negative, non-numeric,            NULL), function analyze vector directly            get maximum number decimal points. function particularly useful numerical computations precise control decimal representation needed, rounding formatting operations. tolerance value provided, number decimal digits determined ceiling negative logarithm (base 10) tolerance. tolerance NULL invalid, function computes maximum decimal places directly numeric vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits_from_tol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine number of decimal digits from tolerance — stm_digits_from_tol","text":"integer representing number decimal digits required.         value based tolerance provided, vector's         maximum decimal places .","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_digits_from_tol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine number of decimal digits from tolerance — stm_digits_from_tol","text":"","code":"vec1 <- c(1.234, 2.56, 3.4859) print(vec1) #> [1] 1.2340 2.5600 3.4859 stm_digits_from_tol(vec1) #> [1] 4  vec2 <- c(1.01, 2.001, 3.0001) print(vec2) #> [1] 1.0100 2.0010 3.0001 stm_digits_from_tol(vec2, tol = 1e-4) #> [1] 4  vec3 <- c(10, 20, 30) print(vec3) #> [1] 10 20 30 stm_digits_from_tol(vec3) #> [1] 0  vec4 <- c(0.123456789, 0.987654321) print(vec4) #> [1] 0.1234568 0.9876543 stm_digits_from_tol(vec4, tol = 1e-10) #> [1] 10  vec5 <- c(100, 200.5867, 300.000000) print(vec5) #> [1] 100.0000 200.5867 300.0000 stm_digits_from_tol(vec5) #> [1] 4"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_e.html","id":null,"dir":"Reference","previous_headings":"","what":"Base of natural logarithms — stm_e","title":"Base of natural logarithms — stm_e","text":"predefined constant base natural logarithms: exp(1).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_e.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base of natural logarithms — stm_e","text":"","code":"stm_e"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_e.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Base of natural logarithms — stm_e","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_euler_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler-Gamma constant — stm_euler_gamma","title":"Euler-Gamma constant — stm_euler_gamma","text":"predefined constant Euler-Gamma constant: euler_gamma.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_euler_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler-Gamma constant — stm_euler_gamma","text":"","code":"stm_euler_gamma"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_euler_gamma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Euler-Gamma constant — stm_euler_gamma","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_euler_gompertz_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler-Gompertz constant — stm_euler_gompertz_delta","title":"Euler-Gompertz constant — stm_euler_gompertz_delta","text":"predefined constant Euler-Gompertz constant: 0.59634736232319407434.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_euler_gompertz_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler-Gompertz constant — stm_euler_gompertz_delta","text":"","code":"stm_euler_gompertz_delta"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_euler_gompertz_delta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Euler-Gompertz constant — stm_euler_gompertz_delta","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Base of natural logarithms — stm_exp","title":"Base of natural logarithms — stm_exp","text":"predefined constant base natural logarithms: exp(1).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base of natural logarithms — stm_exp","text":"","code":"stm_exp"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_exp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Base of natural logarithms — stm_exp","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_exp_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential of pi — stm_exp_pi","title":"Exponential of pi — stm_exp_pi","text":"predefined constant e raised power pi: exp(pi).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_exp_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential of pi — stm_exp_pi","text":"","code":"stm_exp_pi"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_exp_pi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exponential of pi — stm_exp_pi","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_eye.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a matrix with ones on the diagonal and zeros elsewhere — stm_eye","title":"Create a matrix with ones on the diagonal and zeros elsewhere — stm_eye","text":"stm_eye() creates matrix ones along diagonal, allowing offset diagonal (parameter k).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_eye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a matrix with ones on the diagonal and zeros elsewhere — stm_eye","text":"","code":"stm_eye(nrows, ncols = nrows, k = 0)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_eye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a matrix with ones on the diagonal and zeros elsewhere — stm_eye","text":"nrows integer specifying number rows matrix. Must greater equal zero. ncols integer specifying number columns matrix. Defaults nrows. Must greater equal zero. k Optional. integer specifying diagonal offset. default 0 main diagonal. positive value retrieves diagonals main diagonal, negative value retrieves diagonals main diagonal.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_eye.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a matrix with ones on the diagonal and zeros elsewhere — stm_eye","text":"matrix dimensions nrows x ncols ones along         diagonal (offset specified k), zeros         elsewhere.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_eye.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a matrix with ones on the diagonal and zeros elsewhere — stm_eye","text":"function generates matrix ones appear diagonal (offset diagonal determined k), zeros appear everywhere else. k exceeds valid range (.e., diagonal index bounds), matrix zeros returned.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_eye.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a matrix with ones on the diagonal and zeros elsewhere — stm_eye","text":"","code":"stm_eye(nrows = 3) #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 stm_eye(nrows = 4, k = 1) #>      [,1] [,2] [,3] [,4] #> [1,]    0    1    0    0 #> [2,]    0    0    1    0 #> [3,]    0    0    0    1 #> [4,]    0    0    0    0 stm_eye(nrows = 4, ncols = 5, k = -2) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    0 #> [2,]    0    0    0    0    0 #> [3,]    1    0    0    0    0 #> [4,]    0    1    0    0    0"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fexpr_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variable names from a mathematical expression — stm_fexpr_vars","title":"Extract variable names from a mathematical expression — stm_fexpr_vars","text":"stm_fexpr_vars() identifies extracts unique variable names string representation mathematical expression. Mathematical functions sqrt, log, others excluded output.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fexpr_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variable names from a mathematical expression — stm_fexpr_vars","text":"","code":"stm_fexpr_vars(fexpr)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fexpr_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variable names from a mathematical expression — stm_fexpr_vars","text":"fexpr character string representing mathematical expression. valid expression variables functions.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fexpr_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variable names from a mathematical expression — stm_fexpr_vars","text":"character vector unique variable names found expression.         Mathematical functions excluded result.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fexpr_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract variable names from a mathematical expression — stm_fexpr_vars","text":"","code":"expr <- \"x^2 + y * sqrt(z)\" stm_fexpr_vars(expr) #> [1] \"x\" \"y\" \"z\"  expr <- \"log(a) + sin(b) + 3 * pi\" stm_fexpr_vars(expr) #> [1] \"a\" \"b\""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fliplr.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip a matrix left to right — stm_fliplr","title":"Flip a matrix left to right — stm_fliplr","text":"stm_fliplr() flips matrix left right, .e., reverses order columns. achieved calling stm_flip() function left_right = TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fliplr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip a matrix left to right — stm_fliplr","text":"","code":"stm_fliplr(mat)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fliplr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip a matrix left to right — stm_fliplr","text":"mat numeric matrix flipped left right.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fliplr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip a matrix left to right — stm_fliplr","text":"matrix flipped left right.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fliplr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flip a matrix left to right — stm_fliplr","text":"function uses stm_flip() function argument          left_right = TRUE flip matrix horizontally.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fliplr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip a matrix left to right — stm_fliplr","text":"","code":"A <- matrix(1:12, ncol = 4, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    5    6    7    8 #> [3,]    9   10   11   12 stm_fliplr(A) #>      [,1] [,2] [,3] [,4] #> [1,]    4    3    2    1 #> [2,]    8    7    6    5 #> [3,]   12   11   10    9"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_flipud.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip a matrix upside down — stm_flipud","title":"Flip a matrix upside down — stm_flipud","text":"stm_flipud() flips matrix upside , .e., reverses order rows. achieved calling stm_flip() function left_right = FALSE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_flipud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip a matrix upside down — stm_flipud","text":"","code":"stm_flipud(mat)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_flipud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip a matrix upside down — stm_flipud","text":"mat numeric matrix flipped upside .","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_flipud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip a matrix upside down — stm_flipud","text":"matrix flipped upside .","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_flipud.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flip a matrix upside down — stm_flipud","text":"function uses stm_flip() function argument          left_right = FALSE flip matrix vertically.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_flipud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip a matrix upside down — stm_flipud","text":"","code":"A <- matrix(1:16, ncol = 4, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    5    6    7    8 #> [3,]    9   10   11   12 #> [4,]   13   14   15   16 stm_flipud(A) #>      [,1] [,2] [,3] [,4] #> [1,]   13   14   15   16 #> [2,]    9   10   11   12 #> [3,]    5    6    7    8 #> [4,]    1    2    3    4"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fsystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and evaluate a system of expressions with vector inputs — stm_fsystem","title":"Create and evaluate a system of expressions with vector inputs — stm_fsystem","text":"stm_fsystem() converts character vector expressions function evaluates expression using vectors provided arguments.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fsystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and evaluate a system of expressions with vector inputs — stm_fsystem","text":"","code":"stm_fsystem(fsystem, vars = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fsystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and evaluate a system of expressions with vector inputs — stm_fsystem","text":"fsystem character vector element mathematical expression string, representing equations. vars Optional. character vector specifying variable names used expressions. Default NULL, meaning variables automatically detected.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fsystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and evaluate a system of expressions with vector inputs — stm_fsystem","text":"function takes vectors arguments evaluates         expression fsystem given values, returning         numeric vector results.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fsystem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create and evaluate a system of expressions with vector inputs — stm_fsystem","text":"function takes system mathematical expressions converts callable R function. expression evaluated corresponding input vectors. number provided arguments match number expressions, error raised.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_fsystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and evaluate a system of expressions with vector inputs — stm_fsystem","text":"","code":"f <- c(\"2 * x + y\", \"x^2 + sqrt(y)\") f_list <- stm_fsystem(f, vars = c(\"x\", \"y\")) f_list(c(x = 4, y = 9), c(x = 12, y = 7)) #> [1]  17.0000 146.6458  f <- c(\"a + b\", \"a^2 - b\") f_list <- stm_fsystem(f, vars = c(\"a\", \"b\")) f_list(c(a = 3, b = 2), c(a = 5, b = 1)) #> [1]  5 24"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string expression to function — stm_function","title":"Convert string expression to function — stm_function","text":"stm_function() converts function string representation expression valid R function. Checks variable compatibility provides warnings errors necessary.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string expression to function — stm_function","text":"","code":"stm_function(fexpr, vars = NULL, nvars = NULL, par_name = \"fexpr\")"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string expression to function — stm_function","text":"fexpr function string representing mathematical expression. Strings must represent valid mathematical expressions. vars Optional. character vector expected variable names. Default NULL meaning variables assumed multi-variable expressions. nvars Optional. integer specifying expected number variables expression. Raises error count differs. Default NULL par_name Optional. string used error warning messages refer parameter. Defaults \"fexpr\".","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert string expression to function — stm_function","text":"fexpr function, returned unchanged.         string, callable R function constructed returned.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert string expression to function — stm_function","text":"function checks whether fexpr valid function expression. string, variables identified callable function constructed. nvars specified match variable count, error raised. vars specified multiple variables found, warning issued default names assumed.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert string expression to function — stm_function","text":"","code":"f <- stm_function(   fexpr = \"2 * x + sqrt(y) + cos(a) / pi\",    vars = c(\"x\", \"y\", \"a\") ) f(3, 4, 5) #> [1] 8.090292 f(x = 3, y = 4, a = 5) #> [1] 8.090292 f(a = 3, x = 4, y = 5) #> [1] 9.920944"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gauss.html","id":null,"dir":"Reference","previous_headings":"","what":"Gauss constant — stm_gauss","title":"Gauss constant — stm_gauss","text":"predefined constant Gauss constant: (gamma(1/4)^2) / (2 * sqrt(2 * pi^3)).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gauss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gauss constant — stm_gauss","text":"","code":"stm_gauss"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gauss.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gauss constant — stm_gauss","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_get_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get index of a name in a vector, row, or column — stm_get_index","title":"Get index of a name in a vector, row, or column — stm_get_index","text":"stm_get_index() searches specified name given vector, row, column data structure (vector, matrix, data frame), returns index. supports stopping search name found.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_get_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get index of a name in a vector, row, or column — stm_get_index","text":"","code":"stm_get_index(dat, name_to_find, is_columns = TRUE, is_stop = FALSE)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_get_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get index of a name in a vector, row, or column — stm_get_index","text":"dat vector, matrix, data frame search specified name. must iterable contain character elements. name_to_find string representing name search data. is_columns Optional. logical value indicating whether search columns (TRUE) rows (FALSE) matrix data frame. Defaults TRUE. is_stop Optional. logical value indicating whether stop function raise error name found. Defaults FALSE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_get_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get index of a name in a vector, row, or column — stm_get_index","text":"integer index name found, otherwise NULL         is_stop FALSE, error is_stop         TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_get_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get index of a name in a vector, row, or column — stm_get_index","text":"function checks provided data vector, matrix, data frame, performs search name_to_find specified row column. name found is_stop TRUE, function stops raises error message containing search target data structure. is_stop FALSE, function returns NULL.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_get_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get index of a name in a vector, row, or column — stm_get_index","text":"","code":"v <- c(\"A\", \"B\", \"C\") print(v) #> [1] \"A\" \"B\" \"C\" stm_get_index(v, name_to_find = \"B\") #> [1] 2  df <- data.frame(A = 1:3, B = 4:6, C = 7:9) print(df) #>   A B C #> 1 1 4 7 #> 2 2 5 8 #> 3 3 6 9 stm_get_index(df, name_to_find = \"C\") #> [1] 3  A <- matrix(1:6, nrow = 2, byrow = TRUE,   dimnames = list(c(\"X\", \"Y\"), c(\"A\", \"B\", \"C\")) ) print(A) #>   A B C #> X 1 2 3 #> Y 4 5 6 stm_get_index(A, name_to_find = \"A\") #> [1] 1  stm_get_index(A, name_to_find = \"Y\", is_columns = FALSE) #> [1] 2  stm_get_index(A, name_to_find = \"Z\", is_columns = FALSE) #> NULL"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a styled table with gt — stm_gtable","title":"Create a styled table with gt — stm_gtable","text":"stm_gtable() converts provided data tibble, replaces missing values dash (\"-\"), generates styled table using gt package. applies borders, alignment, custom styles table's body column labels.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a styled table with gt — stm_gtable","text":"","code":"stm_gtable(dat)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a styled table with gt — stm_gtable","text":"dat data frame tibble converted styled table. converted tibble necessary.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a styled table with gt — stm_gtable","text":"`gt` table object styling applied. table missing         values replaced dash (\"-\"), cell borders, left alignment         character columns.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a styled table with gt — stm_gtable","text":"function performs following operations: Converts input data tibble using tibble::as_tibble(). Replaces missing values data dash (\"-\") using         tidyr::replace_na(). Creates table using gt::gt() function. Applies cell border styles body column labels table. Left-aligns character columns applies additional styling         padding bold column labels.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_gtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a styled table with gt — stm_gtable","text":"","code":"tbl <- tibble::tibble(   Name = c(\"John\", \"Jane\", \"Doe\"),   Age = c(25, 30, NA),   City = c(\"New York\", \"Los Angeles\", \"Chicago\") ) stm_gtable(tbl)     Name       Age       City     John 25 New YorkJane 30 Los AngelesDoe  Chicago"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hadamard.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Hadamard matrix — stm_hadamard","title":"Generate Hadamard matrix — stm_hadamard","text":"stm_hadamard() generates Hadamard matrix size n, n must power 2. matrix recursively built combining smaller Hadamard matrices.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hadamard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Hadamard matrix — stm_hadamard","text":"","code":"stm_hadamard(n)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hadamard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Hadamard matrix — stm_hadamard","text":"n integer specifying size matrix. must power 2.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hadamard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Hadamard matrix — stm_hadamard","text":"Hadamard matrix size n x n.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hadamard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Hadamard matrix — stm_hadamard","text":"function checks whether n valid power 2. n power 2, error raised. function starts 1x1 matrix recursively expands creating larger matrices joining smaller ones.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hadamard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Hadamard matrix — stm_hadamard","text":"","code":"stm_hadamard(4) #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1   -1    1   -1 #> [3,]    1    1   -1   -1 #> [4,]    1   -1   -1    1 stm_hadamard(8) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]    1    1    1    1    1    1    1    1 #> [2,]    1   -1    1   -1    1   -1    1   -1 #> [3,]    1    1   -1   -1    1    1   -1   -1 #> [4,]    1   -1   -1    1    1   -1   -1    1 #> [5,]    1    1    1    1   -1   -1   -1   -1 #> [6,]    1   -1    1   -1   -1    1   -1    1 #> [7,]    1    1   -1   -1   -1   -1    1    1 #> [8,]    1   -1   -1    1   -1    1    1   -1 stm_hadamard(16) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] #>  [1,]    1    1    1    1    1    1    1    1    1     1     1     1     1 #>  [2,]    1   -1    1   -1    1   -1    1   -1    1    -1     1    -1     1 #>  [3,]    1    1   -1   -1    1    1   -1   -1    1     1    -1    -1     1 #>  [4,]    1   -1   -1    1    1   -1   -1    1    1    -1    -1     1     1 #>  [5,]    1    1    1    1   -1   -1   -1   -1    1     1     1     1    -1 #>  [6,]    1   -1    1   -1   -1    1   -1    1    1    -1     1    -1    -1 #>  [7,]    1    1   -1   -1   -1   -1    1    1    1     1    -1    -1    -1 #>  [8,]    1   -1   -1    1   -1    1    1   -1    1    -1    -1     1    -1 #>  [9,]    1    1    1    1    1    1    1    1   -1    -1    -1    -1    -1 #> [10,]    1   -1    1   -1    1   -1    1   -1   -1     1    -1     1    -1 #> [11,]    1    1   -1   -1    1    1   -1   -1   -1    -1     1     1    -1 #> [12,]    1   -1   -1    1    1   -1   -1    1   -1     1     1    -1    -1 #> [13,]    1    1    1    1   -1   -1   -1   -1   -1    -1    -1    -1     1 #> [14,]    1   -1    1   -1   -1    1   -1    1   -1     1    -1     1     1 #> [15,]    1    1   -1   -1   -1   -1    1    1   -1    -1     1     1     1 #> [16,]    1   -1   -1    1   -1    1    1   -1   -1     1     1    -1     1 #>       [,14] [,15] [,16] #>  [1,]     1     1     1 #>  [2,]    -1     1    -1 #>  [3,]     1    -1    -1 #>  [4,]    -1    -1     1 #>  [5,]    -1    -1    -1 #>  [6,]     1    -1     1 #>  [7,]    -1     1     1 #>  [8,]     1     1    -1 #>  [9,]    -1    -1    -1 #> [10,]     1    -1     1 #> [11,]    -1     1     1 #> [12,]     1     1    -1 #> [13,]     1     1     1 #> [14,]    -1     1    -1 #> [15,]     1    -1    -1 #> [16,]    -1    -1     1"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hankel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Hankel matrix — stm_hankel","title":"Create Hankel matrix — stm_hankel","text":"stm_hankel() generates Hankel matrix two vectors, first vector forms first column second vector forms first row matrix. second vector provided, last element first vector used initialize first element second vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hankel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Hankel matrix — stm_hankel","text":"","code":"stm_hankel(vec1, vec2 = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hankel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Hankel matrix — stm_hankel","text":"vec1 numeric vector form first column Hankel matrix. vec2 Optional. numeric vector form first row Hankel matrix. provided, last element vec1 used initialize first element vec2.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hankel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Hankel matrix — stm_hankel","text":"Hankel matrix size m x n, m length         vec1 n length vec2.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hankel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Hankel matrix — stm_hankel","text":"function constructs Hankel matrix first column formed vec1 first row formed vec2. vec2 provided, last element vec1 used first element vec2. matrix populated element matrix determined sum row column index.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hankel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Hankel matrix — stm_hankel","text":"","code":"x <- c(1, 2, 3, 5) y <- c(5, 6, 7) stm_hankel(x, y) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    2    3    5 #> [3,]    3    5    6 #> [4,]    5    6    7"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hessenberg.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Hessenberg matrix — stm_hessenberg","title":"Compute Hessenberg matrix — stm_hessenberg","text":"stm_hessenberg() computes Hessenberg form square matrix, optionally also returning orthogonal matrix \\( Q \\) used transformation. useful numerical linear algebra, particularly simplifying matrix operations eigenvalue calculations.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hessenberg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Hessenberg matrix — stm_hessenberg","text":"","code":"stm_hessenberg(mat, calc_q = FALSE, digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hessenberg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Hessenberg matrix — stm_hessenberg","text":"mat numeric square matrix transformed Hessenberg form. calc_q Optional. logical indicating whether return orthogonal matrix \\( Q \\) addition Hessenberg matrix. Default FALSE, meaning Hessenberg matrix returned. digits Optional. number digits round result . NULL, rounding performed.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hessenberg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Hessenberg matrix — stm_hessenberg","text":"calc_q = FALSE, matrix representing Hessenberg form         mat. calc_q = TRUE, list containing two         elements: H (Hessenberg matrix) Q (        orthogonal matrix \\( Q \\)).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hessenberg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Hessenberg matrix — stm_hessenberg","text":"function uses pracma::hessenberg() function compute Hessenberg form square matrix. Optionally, also returns orthogonal matrix used transformation, useful certain numerical methods.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hessenberg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Hessenberg matrix — stm_hessenberg","text":"","code":"A <- matrix(   c(4, 1, 2, 2, 3, 1, 1, 0, 2), nrow = 3, byrow = TRUE ) print(A) #>      [,1] [,2] [,3] #> [1,]    4    1    2 #> [2,]    2    3    1 #> [3,]    1    0    2 stm_hessenberg(A) #>           [,1]      [,2]      [,3] #> [1,]  4.000000 -1.788854  1.341641 #> [2,] -2.236068  3.200000 -0.400000 #> [3,]  0.000000  0.600000  1.800000 stm_hessenberg(A, calc_q = TRUE) #> $h #>           [,1]      [,2]      [,3] #> [1,]  4.000000 -1.788854  1.341641 #> [2,] -2.236068  3.200000 -0.400000 #> [3,]  0.000000  0.600000  1.800000 #>  #> $q #>      [,1]       [,2]       [,3] #> [1,]    1  0.0000000  0.0000000 #> [2,]    0 -0.8944272 -0.4472136 #> [3,]    0 -0.4472136  0.8944272 #>  stm_hessenberg(A, calc_q = TRUE, digits = 3) #> $h #>        [,1]   [,2]   [,3] #> [1,]  4.000 -1.789  1.342 #> [2,] -2.236  3.200 -0.400 #> [3,]  0.000  0.600  1.800 #>  #> $q #>      [,1]   [,2]   [,3] #> [1,]    1  0.000  0.000 #> [2,]    0 -0.894 -0.447 #> [3,]    0 -0.447  0.894 #>"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hilbert.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Hilbert matrix — stm_hilbert","title":"Generate Hilbert matrix — stm_hilbert","text":"stm_hilbert() creates n x n Hilbert matrix, element defined Hij = 1 / (+ j - 1), j row column indices.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hilbert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Hilbert matrix — stm_hilbert","text":"","code":"stm_hilbert(n)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hilbert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Hilbert matrix — stm_hilbert","text":"n positive integer specifying size Hilbert matrix. represents number rows columns.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hilbert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Hilbert matrix — stm_hilbert","text":"n x n matrix elements Hij = 1 / (+ j - 1).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hilbert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Hilbert matrix — stm_hilbert","text":"Hilbert matrix used numerical analysis known ill-conditioning n increases. function uses outer() function generate matrix efficiently.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_hilbert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Hilbert matrix — stm_hilbert","text":"","code":"stm_hilbert(3) #>           [,1]      [,2]      [,3] #> [1,] 1.0000000 0.5000000 0.3333333 #> [2,] 0.5000000 0.3333333 0.2500000 #> [3,] 0.3333333 0.2500000 0.2000000 stm_hilbert(5) #>           [,1]      [,2]      [,3]      [,4]      [,5] #> [1,] 1.0000000 0.5000000 0.3333333 0.2500000 0.2000000 #> [2,] 0.5000000 0.3333333 0.2500000 0.2000000 0.1666667 #> [3,] 0.3333333 0.2500000 0.2000000 0.1666667 0.1428571 #> [4,] 0.2500000 0.2000000 0.1666667 0.1428571 0.1250000 #> [5,] 0.2000000 0.1666667 0.1428571 0.1250000 0.1111111"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate identity matrix — stm_identity","title":"Generate identity matrix — stm_identity","text":"stm_identity() creates n x n identity matrix diagonal elements 1, -diagonal elements 0.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate identity matrix — stm_identity","text":"","code":"stm_identity(n)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_identity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate identity matrix — stm_identity","text":"n positive integer specifying size identity matrix. represents number rows columns.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_identity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate identity matrix — stm_identity","text":"n x n identity matrix.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_identity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate identity matrix — stm_identity","text":"identity matrix square matrix ones diagonal zeros elsewhere. used various mathematical operations matrix inversion solving systems linear equations.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_identity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate identity matrix — stm_identity","text":"","code":"stm_identity(3) #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 stm_identity(5) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    0    1    0    0    0 #> [3,]    0    0    1    0    0 #> [4,]    0    0    0    1    0 #> [5,]    0    0    0    0    1"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab2.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab2","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab2","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab2","text":"","code":"stm_ivps_ab2(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab2","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab2","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab2","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab2","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_ab2(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2160813 1.2140876 0.001993680.6 1.6539764 1.6489406 0.005035800.8 2.1365612 2.1272295 0.009331651.0 2.6561319 2.6408591 0.015272821.2 3.2033154 3.1799415 0.023373821.4 3.7666968 3.7324000 0.034296751.6 4.3323743 4.2834838 0.048890481.8 4.8834169 4.8151763 0.068240602.0 5.3992045 5.3054720 0.09373255"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab3.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab3","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab3","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab3","text":"","code":"stm_ivps_ab3(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab3","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab3","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab3","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab3","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_ab3(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2140762 1.2140876 0.000011440.6 1.6493272 1.6489406 0.000386600.8 2.1282567 2.1272295 0.001027221.0 2.6427743 2.6408591 0.001915181.2 3.1830799 3.1799415 0.003138331.4 3.7372088 3.7324000 0.004808731.6 4.2905487 4.2834838 0.007064871.8 4.8252600 4.8151763 0.010083702.0 5.3195640 5.3054720 0.01409209"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab4.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab4","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab4","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab4","text":"","code":"stm_ivps_ab4(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab4","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab4","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab4","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab4","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_ab4(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2140762 1.2140876 0.000011440.6 1.6489220 1.6489406 0.000018580.8 2.1272893 2.1272295 0.000059711.0 2.6410533 2.6408591 0.000194241.2 3.1803141 3.1799415 0.000372591.4 3.7330186 3.7324000 0.000618571.6 4.2844424 4.2834838 0.000958621.8 4.8165956 4.8151763 0.001419292.0 5.3075082 5.3054720 0.00203623"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab5.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab5","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab5","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab5","text":"","code":"stm_ivps_ab5(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab5","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab5","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab5","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ab5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ab5","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_ab5(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2140762 1.2140876 0.000011440.6 1.6489220 1.6489406 0.000018580.8 2.1272027 2.1272295 0.000026851.0 2.6408433 2.6408591 0.000015761.2 3.1799495 3.1799415 0.000008011.4 3.7324366 3.7324000 0.000036601.6 4.2835620 4.2834838 0.000078191.8 4.8153158 4.8151763 0.000139502.0 5.3056948 5.3054720 0.00022284"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm2.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm2","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm2","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm2","text":"","code":"stm_ivps_abm2(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm2","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm2","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm2","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm2","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_abm2(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2138308 1.2140876 0.000256850.6 1.6483189 1.6489406 0.000621650.8 2.1260940 2.1272295 0.001135531.0 2.6390124 2.6408591 0.001846651.2 3.1771244 3.1799415 0.002817191.4 3.7282728 3.7324000 0.004127191.6 4.2776043 4.2834838 0.005879451.8 4.8069706 4.8151763 0.008205662.0 5.2941978 5.3054720 0.01127415"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm3.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm3","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm3","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm3","text":"","code":"stm_ivps_abm3(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm3","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm3","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm3","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm3","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_abm3(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2140762 1.2140876 0.000011440.6 1.6489087 1.6489406 0.000031850.8 2.1271685 2.1272295 0.000061061.0 2.6407575 2.6408591 0.000101601.2 3.1797845 3.1799415 0.000157081.4 3.7321679 3.7324000 0.000232161.6 4.2831510 4.2834838 0.000332781.8 4.8147097 4.8151763 0.000466572.0 5.3048287 5.3054720 0.00064330"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm4.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm4","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm4","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm4","text":"","code":"stm_ivps_abm4(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm4","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm4","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm4","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm4","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_abm4(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2140762 1.2140876 0.000011440.6 1.6489220 1.6489406 0.000018580.8 2.1272056 2.1272295 0.000023901.0 2.6408286 2.6408591 0.000030491.2 3.1799026 3.1799415 0.000038901.4 3.7323505 3.7324000 0.000049531.6 4.2834208 4.2834838 0.000062961.8 4.8150964 4.8151763 0.000079912.0 5.3053707 5.3054720 0.00010128"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm5.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm5","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm5","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm5","text":"","code":"stm_ivps_abm5(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm5","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm5","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm5","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_abm5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_abm5","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_abm5(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000e+000.2 0.8292933 0.8292986 5.290e-060.4 1.2140762 1.2140876 1.144e-050.6 1.6489220 1.6489406 1.858e-050.8 2.1272027 2.1272295 2.685e-051.0 2.6408262 2.6408591 3.287e-051.2 3.1799016 3.1799415 3.997e-051.4 3.7323512 3.7324000 4.879e-051.6 4.2834243 4.2834838 5.949e-051.8 4.8151037 4.8151763 7.253e-052.0 5.3053835 5.3054720 8.844e-05"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_eheun.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_eheun","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_eheun","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_eheun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_eheun","text":"","code":"stm_ivps_eheun(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_eheun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_eheun","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_eheun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_eheun","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_eheun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_eheun","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_eheun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_eheun","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_eheun(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.500000 0.5000000 0.000000000.2 0.826000 0.8292986 0.003298620.4 1.206920 1.2140876 0.007167650.6 1.637242 1.6489406 0.011698200.8 2.110236 2.1272295 0.016993811.0 2.617688 2.6408591 0.023171501.2 3.149579 3.1799415 0.030362681.4 3.693686 3.7324000 0.038713811.6 4.235097 4.2834838 0.048386621.8 4.755619 4.8151763 0.059557722.0 5.233055 5.3054720 0.07241732"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_feuler.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_feuler","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_feuler","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_feuler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_feuler","text":"","code":"stm_ivps_feuler(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_feuler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_feuler","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_feuler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_feuler","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_feuler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_feuler","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_feuler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_feuler","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_feuler(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.500000 0.5000000 0.000000000.2 0.800000 0.8292986 0.029298620.4 1.152000 1.2140876 0.062087650.6 1.550400 1.6489406 0.098540600.8 1.988480 2.1272295 0.138749541.0 2.458176 2.6408591 0.182683091.2 2.949811 3.1799415 0.230130341.4 3.451773 3.7324000 0.280626581.6 3.950128 4.2834838 0.333355661.8 4.428154 4.8151763 0.387022512.0 4.865785 5.3054720 0.43968745"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_heun3.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_heun3","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_heun3","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_heun3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_heun3","text":"","code":"stm_ivps_heun3(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_heun3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_heun3","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_heun3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_heun3","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_heun3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_heun3","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_heun3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_heun3","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_heun3(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292444 0.8292986 0.000054180.4 1.2139750 1.2140876 0.000112660.6 1.6487659 1.6489406 0.000174700.8 2.1269905 2.1272295 0.000239001.0 2.6405556 2.6408591 0.000303541.2 3.1795763 3.1799415 0.000365251.4 3.7319803 3.7324000 0.000419731.6 4.2830230 4.2834838 0.000460761.8 4.8146966 4.8151763 0.000479692.0 5.3050072 5.3054720 0.00046476"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_meuler.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_meuler","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_meuler","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_meuler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_meuler","text":"","code":"stm_ivps_meuler(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_meuler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_meuler","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_meuler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_meuler","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_meuler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_meuler","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_meuler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_meuler","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_meuler(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.500000 0.5000000 0.000000000.2 0.826000 0.8292986 0.003298620.4 1.206920 1.2140876 0.007167650.6 1.637242 1.6489406 0.011698200.8 2.110236 2.1272295 0.016993811.0 2.617688 2.6408591 0.023171501.2 3.149579 3.1799415 0.030362681.4 3.693686 3.7324000 0.038713811.6 4.235097 4.2834838 0.048386621.8 4.755619 4.8151763 0.059557722.0 5.233055 5.3054720 0.07241732"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_mmsimpson.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_mmsimpson","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_mmsimpson","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_mmsimpson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_mmsimpson","text":"","code":"stm_ivps_mmsimpson(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_mmsimpson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_mmsimpson","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_mmsimpson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_mmsimpson","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_mmsimpson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_mmsimpson","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_mmsimpson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_mmsimpson","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_mmsimpson(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000e+000.2 0.8292933 0.8292986 5.290e-060.4 1.2140762 1.2140876 1.144e-050.6 1.6489220 1.6489406 1.858e-050.8 2.1272135 2.1272295 1.607e-051.0 2.6408361 2.6408591 2.299e-051.2 3.1799189 3.1799415 2.264e-051.4 3.7323704 3.7324000 2.961e-051.6 4.2834531 4.2834838 3.073e-051.8 4.8151383 4.8151763 3.797e-052.0 5.3054314 5.3054720 4.052e-05"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_msimpson.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_msimpson","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_msimpson","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_msimpson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_msimpson","text":"","code":"stm_ivps_msimpson(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   start_values_or_method = c(\"rk4\", \"feuler\", \"meuler\", \"heun3\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_msimpson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_msimpson","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. start_values_or_method character string specifying method generating start values vector initial state values. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_msimpson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_msimpson","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_msimpson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_msimpson","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_msimpson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_msimpson","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_msimpson(   odeqtn = f,   exactsol = ft,   start_values_or_method = \"rk4\",   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2140762 1.2140876 0.000011440.6 1.6489220 1.6489406 0.000018580.8 2.1272053 2.1272295 0.000024261.0 2.6408279 2.6408591 0.000031211.2 3.1799015 3.1799415 0.000040041.4 3.7323485 3.7324000 0.000051501.6 4.2834177 4.2834838 0.000066101.8 4.8150916 4.8151763 0.000084652.0 5.3053638 5.3054720 0.00010817"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_nystrom3.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_nystrom3","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_nystrom3","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_nystrom3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_nystrom3","text":"","code":"stm_ivps_nystrom3(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_nystrom3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_nystrom3","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_nystrom3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_nystrom3","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_nystrom3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_nystrom3","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_nystrom3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_nystrom3","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_nystrom3(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8291556 0.8292986 0.000143070.4 1.2137775 1.2140876 0.000310110.6 1.6484359 1.6489406 0.000504740.8 2.1264985 2.1272295 0.000730981.0 2.6398658 2.6408591 0.000993301.2 3.1786450 3.1799415 0.001296571.4 3.7307539 3.7324000 0.001646071.6 4.2814364 4.2834838 0.002047421.8 4.8126698 4.8151763 0.002506422.0 5.3024430 5.3054720 0.00302896"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ralston2.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ralston2","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ralston2","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ralston2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ralston2","text":"","code":"stm_ivps_ralston2(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ralston2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ralston2","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ralston2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ralston2","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ralston2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ralston2","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_ralston2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_ralston2","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_ralston2(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.500000 0.5000000 0.000000000.2 0.827000 0.8292986 0.002298620.4 1.209140 1.2140876 0.004947650.6 1.640951 1.6489406 0.007989800.8 2.115760 2.1272295 0.011469561.0 2.625427 2.6408591 0.015431921.2 3.160021 3.1799415 0.019920391.4 3.707426 3.7324000 0.024974221.6 4.252859 4.2834838 0.030624311.8 4.778289 4.8151763 0.036887712.0 5.261712 5.3054720 0.04375990"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk3.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk3","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk3","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk3","text":"","code":"stm_ivps_rk3(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk3","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk3","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk3","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk3","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_rk3(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.500000 0.5000000 0.000000000.2 0.829200 0.8292986 0.000098620.4 1.213876 1.2140876 0.000211380.6 1.648601 1.6489406 0.000339720.8 2.126745 2.1272295 0.000484991.0 2.640211 2.6408591 0.000648421.2 3.179111 3.1799415 0.000830911.4 3.731367 3.7324000 0.001032901.6 4.282230 4.2834838 0.001254091.8 4.813683 4.8151763 0.001493062.0 5.303725 5.3054720 0.00174686"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk38.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk38","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk38","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk38.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk38","text":"","code":"stm_ivps_rk38(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk38.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk38","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk38.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk38","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk38.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk38","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk38.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk38","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_rk38(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000e+000.2 0.8292956 0.8292986 3.070e-060.4 1.2140811 1.2140876 6.500e-060.6 1.6489303 1.6489406 1.033e-050.8 2.1272150 2.1272295 1.455e-051.0 2.6408399 2.6408591 1.915e-051.2 3.1799175 3.1799415 2.408e-051.4 3.7323707 3.7324000 2.928e-051.6 4.2834492 4.2834838 3.461e-051.8 4.8151364 4.8151763 3.989e-052.0 5.3054271 5.3054720 4.482e-05"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk4.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk4","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk4","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk4","text":"","code":"stm_ivps_rk4(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk4","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk4","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk4","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk4","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_rk4(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8292933 0.8292986 0.000005290.4 1.2140762 1.2140876 0.000011440.6 1.6489220 1.6489406 0.000018580.8 2.1272027 2.1272295 0.000026851.0 2.6408227 2.6408591 0.000036391.2 3.1798942 3.1799415 0.000047371.4 3.7323401 3.7324000 0.000059941.6 4.2834095 4.2834838 0.000074291.8 4.8150857 4.8151763 0.000090572.0 5.3053630 5.3054720 0.00010895"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk5.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk5","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk5","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk5","text":"","code":"stm_ivps_rk5(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk5","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk5","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk5","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rk5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rk5","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_rk5(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.00e+000.2 0.8292987 0.8292986 6.00e-080.4 1.2140878 1.2140876 1.30e-070.6 1.6489408 1.6489406 2.10e-070.8 2.1272298 2.1272295 3.10e-071.0 2.6408595 2.6408591 4.30e-071.2 3.1799421 3.1799415 5.80e-071.4 3.7324008 3.7324000 7.50e-071.6 4.2834848 4.2834838 9.60e-071.8 4.8151775 4.8151763 1.22e-062.0 5.3054735 5.3054720 1.52e-06"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkf4.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkf4","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkf4","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkf4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkf4","text":"","code":"stm_ivps_rkf4(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   hmin = 0.01,   hmax = 0.25,   tolerance = 1e-16,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkf4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkf4","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. hmin Minimum step size adaptive step-size control. Default 0.01 hmax Maximum step size adaptive step-size control. Default 0.25 tolerance Error tolerance controlling local truncation error. Default 1e-16 show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkf4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkf4","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkf4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkf4","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkf4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkf4","text":"","code":"# None"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmersen.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmersen","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmersen","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmersen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmersen","text":"","code":"stm_ivps_rkmersen(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmersen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmersen","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmersen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmersen","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmersen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmersen","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmersen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmersen","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_rkmersen(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.5000000 0.5000000 0.000000000.2 0.8224354 0.8292986 0.006863210.4 1.1995653 1.2140876 0.014522400.6 1.6259167 1.6489406 0.023023880.8 2.0948334 2.1272295 0.032396111.0 2.5982194 2.6408591 0.042639711.2 3.1262277 3.1799415 0.053713851.4 3.6668819 3.7324000 0.065518111.6 4.2056154 4.2834838 0.077868361.8 4.7247114 4.8151763 0.090464902.0 5.2026212 5.3054720 0.10285074"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmeuler.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmeuler","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmeuler","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmeuler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmeuler","text":"","code":"stm_ivps_rkmeuler(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmeuler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmeuler","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmeuler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmeuler","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmeuler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmeuler","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmeuler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmeuler","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_rkmeuler(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.500000 0.5000000 0.000000000.2 0.826000 0.8292986 0.003298620.4 1.206920 1.2140876 0.007167650.6 1.637242 1.6489406 0.011698200.8 2.110236 2.1272295 0.016993811.0 2.617688 2.6408591 0.023171501.2 3.149579 3.1799415 0.030362681.4 3.693686 3.7324000 0.038713811.6 4.235097 4.2834838 0.048386621.8 4.755619 4.8151763 0.059557722.0 5.233055 5.3054720 0.07241732"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmidpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmidpoint","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmidpoint","text":"stm_ivps*() set functions solve IVPs ordinary differential equations (ODEs) using various numerical methods. Supports solving single equations systems ODEs.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmidpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmidpoint","text":"","code":"stm_ivps_rkmidpoint(   odeqtn,   exactsol = NULL,   vars = c(\"t\", \"y\"),   time_span = NULL,   y0 = NULL,   step_size = NULL,   nsteps = 10,   maxit = 100,   show_iters = NULL,   view_table = FALSE,   show_plot = TRUE,   digits = 8 )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmidpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmidpoint","text":"odeqtn function defining ODE system. take two arguments: current time state vector y = f(t, y). exactsol Optional. function representing exact solution comparison. Default NULL. vars Independent dependent variables. time_span numeric vector specifying time range solution. length 2. y0 Initial state values ODE system. step_size step size numerical method. NULL, computed based time span number steps. nsteps number time steps take. Default 10. maxit Maximum number iterations iterative methods. Default 10. show_iters Logical. TRUE, iteration details displayed. Default NULL. view_table Logical. TRUE, results viewed R spreadsheet. Default FALSE. show_plot Logical. TRUE, results plotted. Default TRUE. digits number significant digits display results. Default 8.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmidpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmidpoint","text":"data frame containing time points corresponding solution         values. exact solution provided, error time         point also included. Time (t): Time points. Approx. (yi): State values time point. Exact (y): Exact solution exactsol provided. Error: |y - yi|: error time point           exactsol provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmidpoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmidpoint","text":"functions solve initial value problems ODEs using specified numerical method. can handle single ODEs systems ODEs providing state variables vector. exact solution provided, error time point calculated comparison.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ivps_rkmidpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve initial value problems (IVPs) using numerical methods — stm_ivps_rkmidpoint","text":"","code":"f <- \"y - t^2 + 1\" ft <- \"(t + 1)^2 - 0.5 * exp(t)\" result <- stm_ivps_rkmidpoint(   odeqtn = f,   exactsol = ft,   time_span = c(0, 2),   y0 = 0.5,   nsteps = 10,   show_plot = FALSE ) stm_gtable(result)     Time (t)       Approx. (yi)       Exact (y)       Error: |y - yi|     0.0 0.500000 0.5000000 0.000000000.2 0.828000 0.8292986 0.001298620.4 1.211360 1.2140876 0.002727650.6 1.644659 1.6489406 0.004281400.8 2.121284 2.1272295 0.005945311.0 2.633167 2.6408591 0.007692331.2 3.170463 3.1799415 0.009478101.4 3.721165 3.7324000 0.011234621.6 4.270622 4.2834838 0.012862011.8 4.800959 4.8151763 0.014217692.0 5.290369 5.3054720 0.01510249"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep specified columns in a data frame — stm_keep_cols","title":"Keep specified columns in a data frame — stm_keep_cols","text":"stm_keep_cols() retains specified columns data frame. uses stm_transform_keep_delete() perform operation.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep specified columns in a data frame — stm_keep_cols","text":"","code":"stm_keep_cols(dat, indices, as_matrix = TRUE)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep specified columns in a data frame — stm_keep_cols","text":"dat data frame matrix columns retained. indices numeric vector logical vector indicating columns retain. as_matrix Optional. logical value indicating whether result returned matrix. Default TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep specified columns in a data frame — stm_keep_cols","text":"data frame matrix containing specified columns.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Keep specified columns in a data frame — stm_keep_cols","text":"function uses stm_transform_keep_delete() retain specified columns given data. as_matrix TRUE, result returned matrix, otherwise data frame returned.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep specified columns in a data frame — stm_keep_cols","text":"","code":"A <- matrix(1:15, ncol = 5, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    2    3    4    5 #> [2,]    6    7    8    9   10 #> [3,]   11   12   13   14   15 stm_keep_cols(A, 2) #>      [,1] #> [1,]    2 #> [2,]    7 #> [3,]   12 stm_keep_cols(A, 2, as_matrix = FALSE) #> [1]  2  7 12"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep specific rows in a data frame or matrix — stm_keep_rows","title":"Keep specific rows in a data frame or matrix — stm_keep_rows","text":"stm_keep_rows() keeps specified rows data frame matrix based provided indices.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep specific rows in a data frame or matrix — stm_keep_rows","text":"","code":"stm_keep_rows(dat, indices, as_matrix = TRUE)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep specific rows in a data frame or matrix — stm_keep_rows","text":"dat data frame matrix rows kept. indices vector row indices retain. as_matrix logical value indicating whether result converted matrix. Default TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep specific rows in a data frame or matrix — stm_keep_rows","text":"data frame matrix specified rows retained.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Keep specific rows in a data frame or matrix — stm_keep_rows","text":"function uses stm_transform_keep_delete() retain rows specified indices. result can optionally returned matrix based as_matrix argument.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_keep_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep specific rows in a data frame or matrix — stm_keep_rows","text":"","code":"A <- matrix(1:15, ncol = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    4    5    6 #> [3,]    7    8    9 #> [4,]   10   11   12 #> [5,]   13   14   15 stm_keep_rows(A, c(1, 3)) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    7    8    9"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_levy_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Levy beta constant — stm_levy_beta","title":"Levy beta constant — stm_levy_beta","text":"predefined constant Levy beta constant pi^2 / (12 * log(2)).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_levy_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Levy beta constant — stm_levy_beta","text":"","code":"stm_levy_beta"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_levy_beta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Levy beta constant — stm_levy_beta","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_levy_ebeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential of Levy beta constant — stm_levy_ebeta","title":"Exponential of Levy beta constant — stm_levy_ebeta","text":"predefined constant exponential Levy beta constant: exp(pi^2 / (12 * log(2))).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_levy_ebeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential of Levy beta constant — stm_levy_ebeta","text":"","code":"stm_levy_ebeta"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_levy_ebeta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exponential of Levy beta constant — stm_levy_ebeta","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_linspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate linearly spaced vector — stm_linspace","title":"Generate linearly spaced vector — stm_linspace","text":"stm_linspace() generates vector linearly spaced values , specified number points n.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_linspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate linearly spaced vector — stm_linspace","text":"","code":"stm_linspace(from, to, n = 50, digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_linspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate linearly spaced vector — stm_linspace","text":"numeric value representing start sequence. numeric value representing end sequence. n Optional. positive integer specifying number points sequence. Default 50. digits Optional. integer specifying number decimal places round result. Default NULL.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_linspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate linearly spaced vector — stm_linspace","text":"numeric vector length n linearly spaced values         .","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_linspace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate linearly spaced vector — stm_linspace","text":"function generates sequence values equal spacing , useful creating plots numerical grids. digits provided, resulting vector rounded specified number decimal places.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_linspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate linearly spaced vector — stm_linspace","text":"","code":"stm_linspace(from = 0, to = 1, n = 7) #> [1] 0.0000000 0.1666667 0.3333333 0.5000000 0.6666667 0.8333333 1.0000000 stm_linspace(from = 0, to = 1, n = 7, digits = 4) #> [1] 0.0000 0.1667 0.3333 0.5000 0.6667 0.8333 1.0000"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ln2.html","id":null,"dir":"Reference","previous_headings":"","what":"Natural logarithm of 2 — stm_ln2","title":"Natural logarithm of 2 — stm_ln2","text":"predefined constant natural logarithm 2: log(2).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ln2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Natural logarithm of 2 — stm_ln2","text":"","code":"stm_ln2"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ln2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Natural logarithm of 2 — stm_ln2","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_logspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate log-spaced vector — stm_logspace","title":"Generate log-spaced vector — stm_logspace","text":"stm_logspace() generates vector logarithmically spaced values , using logarithmic scale base 10.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_logspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate log-spaced vector — stm_logspace","text":"","code":"stm_logspace(from, to, n = 50, digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_logspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate log-spaced vector — stm_logspace","text":"numeric value representing start sequence logarithmic space. numeric value representing end sequence logarithmic space. n Optional. positive integer specifying number points sequence. Default 50. digits Optional. integer specifying number decimal places round result. Default NULL.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_logspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate log-spaced vector — stm_logspace","text":"numeric vector length n logarithmically spaced         values 10^10^.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_logspace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate log-spaced vector — stm_logspace","text":"function creates sequence values logarithmic spacing, useful visualizing data wide range numerical methods involving logarithms. digits provided, resulting vector rounded specified number decimal places.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_logspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate log-spaced vector — stm_logspace","text":"","code":"stm_logspace(from = 1, to = 5, n = 7) #> [1]     10.00000     46.41589    215.44347   1000.00000   4641.58883 #> [6]  21544.34690 100000.00000 stm_logspace(from = 0, to = 1, n = 7, digits = 2) #> [1]  1.00  1.47  2.15  3.16  4.64  6.81 10.00"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_mu.html","id":null,"dir":"Reference","previous_headings":"","what":"Connective constant — stm_mu","title":"Connective constant — stm_mu","text":"predefined constant connective constant: sqrt(2 + sqrt(2)).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_mu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connective constant — stm_mu","text":"","code":"stm_mu"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_mu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Connective constant — stm_mu","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Omega constant — stm_omega","title":"Omega constant — stm_omega","text":"predefined constant omega constant: 0.56714329040978387299.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omega constant — stm_omega","text":"","code":"stm_omega"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_omega.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Omega constant — stm_omega","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a matrix of ones — stm_ones","title":"Create a matrix of ones — stm_ones","text":"stm_ones() creates matrix ones specified number rows columns. uses stm_constant() function fill matrix ones.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a matrix of ones — stm_ones","text":"","code":"stm_ones(nrows, ncols = nrows)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a matrix of ones — stm_ones","text":"nrows number rows matrix. ncols number columns matrix. Defaults nrows.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a matrix of ones — stm_ones","text":"matrix filled ones, dimensions specified         nrows ncols.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a matrix of ones — stm_ones","text":"","code":"stm_ones(nrows = 4) #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1 #> [3,]    1    1    1    1 #> [4,]    1    1    1    1 stm_ones(nrows = 3, ncols = 3) #>      [,1] [,2] [,3] #> [1,]    1    1    1 #> [2,]    1    1    1 #> [3,]    1    1    1 stm_ones(nrows = 2, ncols = 4) #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a matrix or vector of ones like an existing matrix or vector — stm_ones_like","title":"Generate a matrix or vector of ones like an existing matrix or vector — stm_ones_like","text":"stm_ones_like() generates matrix vector ones matches dimensions provided input matrix vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a matrix or vector of ones like an existing matrix or vector — stm_ones_like","text":"","code":"stm_ones_like(vmat)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a matrix or vector of ones like an existing matrix or vector — stm_ones_like","text":"vmat matrix vector whose dimensions used generate matrix vector ones.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a matrix or vector of ones like an existing matrix or vector — stm_ones_like","text":"matrix vector dimensions vmat, filled         ones.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones_like.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a matrix or vector of ones like an existing matrix or vector — stm_ones_like","text":"function checks validity input vmat, converting matrix vector. generates matrix ones size vmat.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_ones_like.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a matrix or vector of ones like an existing matrix or vector — stm_ones_like","text":"","code":"A <- matrix(1:12, nrow = 3, byrow = TRUE) stm_ones_like(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1 #> [3,]    1    1    1    1 stm_ones_like(c(1, 2, 3)) #>      [,1] #> [1,]    1 #> [2,]    1 #> [3,]    1"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pascal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Pascal's Triangle — stm_pascal","title":"Generate Pascal's Triangle — stm_pascal","text":"stm_pascal() generates Pascal's Triangle n-th row returns triangle matrix along coefficients last row.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pascal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Pascal's Triangle — stm_pascal","text":"","code":"stm_pascal(n)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pascal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Pascal's Triangle — stm_pascal","text":"n number rows generate Pascal's Triangle. Must positive integer.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pascal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Pascal's Triangle — stm_pascal","text":"list containing: y matrix representing Pascal's Triangle. coefs vector coefficients last row triangle.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pascal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Pascal's Triangle — stm_pascal","text":"","code":"stm_pascal(3) #> $y #>      [,1] [,2] [,3] #> [1,]    1    1    1 #> [2,]    1    2    3 #> [3,]    1    3    6 #>  #> $coefs #> [1] 1 3 6 3 1 #>  stm_pascal(5) #> $y #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    1    1    1    1 #> [2,]    1    2    3    4    5 #> [3,]    1    3    6   10   15 #> [4,]    1    4   10   20   35 #> [5,]    1    5   15   35   70 #>  #> $coefs #> [1]  1  5 15 35 70 35 15  5  1 #>"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_phi.html","id":null,"dir":"Reference","previous_headings":"","what":"Golden ratio — stm_phi","title":"Golden ratio — stm_phi","text":"predefined constant golden ratio: (1 + sqrt(5)) / 2.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Golden ratio — stm_phi","text":"","code":"stm_phi"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_phi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Golden ratio — stm_phi","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"Mathematical constant pi — stm_pi","title":"Mathematical constant pi — stm_pi","text":"predefined constant mathematical constant pi: pi.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mathematical constant pi — stm_pi","text":"","code":"stm_pi"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mathematical constant pi — stm_pi","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi_ln2.html","id":null,"dir":"Reference","previous_headings":"","what":"Pi divided by ln(2) — stm_pi_ln2","title":"Pi divided by ln(2) — stm_pi_ln2","text":"predefined constant pi divided natural logarithm 2: pi / log(2).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi_ln2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pi divided by ln(2) — stm_pi_ln2","text":"","code":"stm_pi_ln2"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi_ln2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pi divided by ln(2) — stm_pi_ln2","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi_log2.html","id":null,"dir":"Reference","previous_headings":"","what":"Pi divided by log2 — stm_pi_log2","title":"Pi divided by log2 — stm_pi_log2","text":"predefined constant pi divided base-2 logarithm 2: pi / log(2).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi_log2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pi divided by log2 — stm_pi_log2","text":"","code":"stm_pi_log2"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_pi_log2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pi divided by log2 — stm_pi_log2","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_psi.html","id":null,"dir":"Reference","previous_headings":"","what":"Supergolden ratio — stm_psi","title":"Supergolden ratio — stm_psi","text":"predefined constant supergolden ratio.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_psi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supergolden ratio — stm_psi","text":"","code":"stm_psi"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_psi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Supergolden ratio — stm_psi","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rad_to_degrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert radians to degrees — stm_rad_to_degrees","title":"Convert radians to degrees — stm_rad_to_degrees","text":"stm_rad_to_degrees() converts value radians degrees. result can rounded specified number decimal places.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rad_to_degrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert radians to degrees — stm_rad_to_degrees","text":"","code":"stm_rad_to_degrees(radians, digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rad_to_degrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert radians to degrees — stm_rad_to_degrees","text":"radians numeric value representing angle radians. digits Optional. number decimal places round result. Default NULL rounding.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rad_to_degrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert radians to degrees — stm_rad_to_degrees","text":"value degrees, rounded specified number decimal         places digits provided.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rad_to_degrees.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert radians to degrees — stm_rad_to_degrees","text":"function converts given angle radians degrees multiplying 180 / pi. digits specified, result rounded number decimal places.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rad_to_degrees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert radians to degrees — stm_rad_to_degrees","text":"","code":"stm_rad_to_degrees(pi) #> [1] 180 stm_rad_to_degrees(c(pi/2, pi, 2 * pi)) #> [1]  90 180 360 stm_rad_to_degrees(pi/180) #> [1] 1"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random string of characters — stm_random_char","title":"Generate a random string of characters — stm_random_char","text":"stm_random_char() generates random string characters specified length, including numbers, lowercase, uppercase letters based user-defined options.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random string of characters — stm_random_char","text":"","code":"stm_random_char(   n = 8,   numbers = TRUE,   include_lowercase = TRUE,   include_uppercase = TRUE,   set_seed = NULL )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random string of characters — stm_random_char","text":"n length random string generate. Defaults 8. numbers Whether include numeric digits (0-9). Defaults TRUE. include_lowercase Whether include lowercase letters. Defaults TRUE. include_uppercase Whether include uppercase letters. Defaults TRUE. set_seed Optional. integer seed random number generation. Defaults NULL (fixed seed).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random string of characters — stm_random_char","text":"random string characters length n.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random string of characters — stm_random_char","text":"","code":"# Generate a random string with default parameters stm_random_char() #> [1] \"5ujP3K74\"  # Generate a random string with only lowercase letters stm_random_char(include_uppercase = FALSE) #> [1] \"7bm3i5w7\"  # Generate a random string with only numbers stm_random_char(include_lowercase = FALSE, include_uppercase = FALSE) #> [1] \"54458308\""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random matrix — stm_random_matrix","title":"Generate a random matrix — stm_random_matrix","text":"stm_random_matrix() generates matrix random numbers specified size range. Optionally, allows user set seed reproducibility assign row column names.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random matrix — stm_random_matrix","text":"","code":"stm_random_matrix(   min = -4,   max = 9,   nrows = 1,   ncols = nrows,   replace = TRUE,   set_seed = NULL,   row_names = NULL,   col_names = NULL )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random matrix — stm_random_matrix","text":"min Minimum value matrix. Default -4. max Maximum value matrix. Default 9. nrows Number rows matrix. Default 1. ncols Number columns matrix. Default equal nrows. replace Logical value indicating whether sampling replacement. Default TRUE. set_seed Optional seed value random number generation. row_names Optional character vector row names. col_names Optional character vector column names.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random matrix — stm_random_matrix","text":"matrix random numbers specified size, range, names.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a random matrix — stm_random_matrix","text":"function generates matrix random numbers within specified range (min max) specified dimensions (nrows ncols). replace TRUE, sampling done replacement. set_seed provided, random number generation reproducible. Additionally, row column names can specified. names match matrix dimensions, error raised.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random matrix — stm_random_matrix","text":"","code":"# note that your values will be different stm_random_matrix() #>      [,1] #> [1,]    4 stm_random_matrix(min = 0, max = 1, nrows = 3, ncols = 3) #>      [,1] [,2] [,3] #> [1,]    0    0    1 #> [2,]    1    0    1 #> [3,]    0    0    0 stm_random_matrix(min = 10, max = 99, nrows = 5, ncols = 4) #>      [,1] [,2] [,3] [,4] #> [1,]   26   27   53   92 #> [2,]   72   33   32   71 #> [3,]   42   93   61   94 #> [4,]   57   78   29   31 #> [5,]   94   21   13   30"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random number from a vector — stm_random_number","title":"Generate a random number from a vector — stm_random_number","text":"stm_random_number() generates random number specified vector. Optionally, user can set seed reproducibility.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random number from a vector — stm_random_number","text":"","code":"stm_random_number(vec = 10:99, set_seed = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random number from a vector — stm_random_number","text":"vec vector sample. Default 10:99. set_seed Optional seed value random number generation. Default NULL","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random number from a vector — stm_random_number","text":"random number sampled specified vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_number.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a random number from a vector — stm_random_number","text":"function samples one random number provided vector vec. set_seed specified, random number generation reproducible. function returns single sampled value.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random number from a vector — stm_random_number","text":"","code":"stm_random_number() #> [1] 92 stm_random_number(vec = c(1, 2, 3, 4, 5)) #> [1] 4 stm_random_number(set_seed = 42) #> [1] 58"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random vector — stm_random_vector","title":"Generate a random vector — stm_random_vector","text":"stm_random_vector() generates random vector values specified minimum maximum. Optionally, vector can sorted increasing decreasing order.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random vector — stm_random_vector","text":"","code":"stm_random_vector(   min = 10,   max = 99,   n = 10,   replace = TRUE,   set_seed = NULL,   is_sorted = FALSE,   is_decreasing = FALSE )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random vector — stm_random_vector","text":"min minimum value vector elements. Default 10. max maximum value vector elements. Default 99. n number elements vector. Default 10. replace logical indicating whether sampling replacement. Default TRUE. set_seed Optional seed random number generation. is_sorted logical indicating whether sort vector. Default FALSE. is_decreasing logical indicating whether sort vector decreasing order. Default FALSE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random vector — stm_random_vector","text":"numeric vector random values, optionally sorted.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a random vector — stm_random_vector","text":"function generates random vector specified number elements value range. vector can sorted increasing decreasing order based is_sorted is_decreasing parameters.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_random_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random vector — stm_random_vector","text":"","code":"stm_random_vector() #>  [1] 74 34 83 27 58 56 33 80 98 46 stm_random_vector(n = 5, is_sorted = TRUE) #> [1] 12 29 35 50 98 stm_random_vector(   n = 8, is_sorted = TRUE, is_decreasing = TRUE, set_seed = 42 ) #> [1] 83 74 58 58 56 34 33 27"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_repeat.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat elements of a vector or matrix — stm_repeat","title":"Repeat elements of a vector or matrix — stm_repeat","text":"stm_repeat() repeats elements vector matrix. can repeat based entire vector column-wise matrices. Optionally, can repeat element individually.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_repeat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat elements of a vector or matrix — stm_repeat","text":"","code":"stm_repeat(dat, times, is_each = FALSE, on_columns = TRUE)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_repeat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat elements of a vector or matrix — stm_repeat","text":"dat vector, matrix, scalar repeated. times numeric vector scalar indicating number times elements repeated. is_each Logical. TRUE, element dat repeated individually. Default FALSE. on_columns Logical. TRUE, repetition done column-wise matrices. Default TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_repeat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat elements of a vector or matrix — stm_repeat","text":"vector matrix repeated elements.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_repeat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Repeat elements of a vector or matrix — stm_repeat","text":"function repeats elements vector matrix. vectors, elements can repeated individually. matrices, repetition can done either row-wise column-wise.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_repeat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeat elements of a vector or matrix — stm_repeat","text":"","code":"v = c(4, 5, 8, 3) stm_repeat(v, times = 3) #>  [1] 4 5 8 3 4 5 8 3 4 5 8 3 stm_repeat(v, times = c(3, 2, 1, 5)) #>  [1] 4 4 4 5 5 8 3 3 3 3 3 A <- matrix(1:6, nrow = 2, byrow = TRUE) print(A) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    4    5    6 stm_repeat(A, times = 3) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #> [1,]    1    2    3    1    2    3    1    2    3 #> [2,]    4    5    6    4    5    6    4    5    6 stm_repeat(A, times = 3, on_columns = FALSE) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    4    5    6 #> [3,]    1    2    3 #> [4,]    4    5    6 #> [5,]    1    2    3 #> [6,]    4    5    6"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rosser.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the Rosser matrix — stm_rosser","title":"Generate the Rosser matrix — stm_rosser","text":"stm_rosser() generates specific 8x8 matrix used numerical examples. matrix elements predefined arranged specific pattern.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rosser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the Rosser matrix — stm_rosser","text":"","code":"stm_rosser()"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rosser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the Rosser matrix — stm_rosser","text":"8x8 matrix predefined values.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rosser.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate the Rosser matrix — stm_rosser","text":"function returns matrix commonly used numerical linear algebra problems, known Rosser matrix.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rosser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the Rosser matrix — stm_rosser","text":"","code":"stm_rosser() #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]  611  196 -192  407   -8  -52  -49   29 #> [2,]  196  899  113 -192  -71  -43   -8  -44 #> [3,] -192  113  899  196   61   49    8   52 #> [4,]  407 -192  196  611    8   44   59  -23 #> [5,]   -8  -71   61    8  411 -599  208  208 #> [6,]  -52  -43   49   44 -599  411  208  208 #> [7,]  -49   -8    8   59  208  208   99 -911 #> [8,]   29  -44   52  -23  208  208 -911   99"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rot90.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate a matrix by 90 degrees — stm_rot90","title":"Rotate a matrix by 90 degrees — stm_rot90","text":"stm_rot90() rotates matrix 90 degrees counterclockwise. number 90-degree rotations determined argument k.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rot90.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate a matrix by 90 degrees — stm_rot90","text":"","code":"stm_rot90(mat, k = 1)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rot90.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate a matrix by 90 degrees — stm_rot90","text":"mat numeric matrix rotated. k number 90-degree rotations. Default 1, rotates matrix . matrix can rotated multiple times specifying higher values k.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rot90.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate a matrix by 90 degrees — stm_rot90","text":"rotated matrix.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rot90.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate a matrix by 90 degrees — stm_rot90","text":"function supports multiple rotations accepting integer          k. matrix rotated counterclockwise 90 degrees          rotation. parameter k modulo 4 handle          cases 4 rotations requested.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_rot90.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate a matrix by 90 degrees — stm_rot90","text":"","code":"A <- matrix(1:12, nrow = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    5    6    7    8 #> [3,]    9   10   11   12 stm_rot90(A) #>      [,1] [,2] [,3] #> [1,]    4    8   12 #> [2,]    3    7   11 #> [3,]    2    6   10 #> [4,]    1    5    9 stm_rot90(A, k = 2) #>      [,1] [,2] [,3] [,4] #> [1,]   12   11   10    9 #> [2,]    8    7    6    5 #> [3,]    4    3    2    1 stm_rot90(A, k = -2) #>      [,1] [,2] [,3] [,4] #> [1,]   12   11   10    9 #> [2,]    8    7    6    5 #> [3,]    4    3    2    1 stm_rot90(A, k = 3) #>      [,1] [,2] [,3] #> [1,]    9    5    1 #> [2,]   10    6    2 #> [3,]   11    7    3 #> [4,]   12    8    4 stm_rot90(A, k = 4) # original matrix #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    5    6    7    8 #> [3,]    9   10   11   12"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_round.html","id":null,"dir":"Reference","previous_headings":"","what":"Round numeric data to specified digits — stm_round","title":"Round numeric data to specified digits — stm_round","text":"stm_round() rounds numeric data specified number digits. input list, rounding applied element-wise numeric element.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round numeric data to specified digits — stm_round","text":"","code":"stm_round(dat, digits = NULL)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round numeric data to specified digits — stm_round","text":"dat numeric vector, list, matrix round. digits Optional. number decimal places round . provided invalid, original data returned.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round numeric data to specified digits — stm_round","text":"rounded data.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_round.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round numeric data to specified digits — stm_round","text":"function applies rounding numeric data. dat list, apply rounding element-wise numeric element list. error occurs rounding, original data returned.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_round.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round numeric data to specified digits — stm_round","text":"","code":"stm_round(3.14159, digits = 2) #> [1] 3.14 stm_round(3.14159, digits = \"two\") #> [1] 3.14159 a <- list(3.14159, \"hello\", 2.71828, list(1.61803, \"world\")) stm_round(a, digits = 3) #> [[1]] #> [1] 3.142 #>  #> [[2]] #> [1] \"hello\" #>  #> [[3]] #> [1] 2.718 #>  #> [[4]] #> [[4]][[1]] #> [1] 1.61803 #>  #> [[4]][[2]] #> [1] \"world\" #>  #>"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_second_hermite_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Second Hermite constant — stm_second_hermite_gamma","title":"Second Hermite constant — stm_second_hermite_gamma","text":"predefined constant second Hermite constant: 2 / sqrt(3).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_second_hermite_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second Hermite constant — stm_second_hermite_gamma","text":"","code":"stm_second_hermite_gamma"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_second_hermite_gamma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Second Hermite constant — stm_second_hermite_gamma","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_siver_ratio_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Silver ratio — stm_siver_ratio_delta","title":"Silver ratio — stm_siver_ratio_delta","text":"predefined constant silver ratio: sqrt(2) + 1.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_siver_ratio_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Silver ratio — stm_siver_ratio_delta","text":"","code":"stm_siver_ratio_delta"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_siver_ratio_delta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Silver ratio — stm_siver_ratio_delta","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt2.html","id":null,"dir":"Reference","previous_headings":"","what":"Square root of 2 — stm_sqrt2","title":"Square root of 2 — stm_sqrt2","text":"predefined constant square root 2: sqrt(2).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Square root of 2 — stm_sqrt2","text":"","code":"stm_sqrt2"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Square root of 2 — stm_sqrt2","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt3.html","id":null,"dir":"Reference","previous_headings":"","what":"Square root of 3 — stm_sqrt3","title":"Square root of 3 — stm_sqrt3","text":"predefined constant square root 3: sqrt(3).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Square root of 3 — stm_sqrt3","text":"","code":"stm_sqrt3"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Square root of 3 — stm_sqrt3","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt5.html","id":null,"dir":"Reference","previous_headings":"","what":"Square root of 5 — stm_sqrt5","title":"Square root of 5 — stm_sqrt5","text":"predefined constant square root 5: sqrt(5).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Square root of 5 — stm_sqrt5","text":"","code":"stm_sqrt5"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_sqrt5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Square root of 5 — stm_sqrt5","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack columns together into a data frame or matrix — stm_stack_cols","title":"Stack columns together into a data frame or matrix — stm_stack_cols","text":"stm_stack_cols() combines multiple data frames vectors column binding together using cbind().","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack columns together into a data frame or matrix — stm_stack_cols","text":"","code":"stm_stack_cols(...)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack columns together into a data frame or matrix — stm_stack_cols","text":"... Data frames, matrices, vectors combined columns.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack columns together into a data frame or matrix — stm_stack_cols","text":"data frame matrix resulting column-wise binding         input data.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stack columns together into a data frame or matrix — stm_stack_cols","text":"function stacks provided data frames, matrices, vectors columns using cbind() function. resulting object returned data frame matrix.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stack columns together into a data frame or matrix — stm_stack_cols","text":"","code":"A <- matrix(1:4, nrow = 2, byrow = TRUE) print(A) #>      [,1] [,2] #> [1,]    1    2 #> [2,]    3    4 B <- matrix(5:8, nrow = 2, byrow = TRUE) print(B) #>      [,1] [,2] #> [1,]    5    6 #> [2,]    7    8 stm_stack_cols(A, B) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    5    6 #> [2,]    3    4    7    8"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack rows together into a data frame or matrix — stm_stack_rows","title":"Stack rows together into a data frame or matrix — stm_stack_rows","text":"stm_stack_rows() combines multiple data frames vectors row binding together using rbind().","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack rows together into a data frame or matrix — stm_stack_rows","text":"","code":"stm_stack_rows(...)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack rows together into a data frame or matrix — stm_stack_rows","text":"... Data frames, matrices, vectors combined rows.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack rows together into a data frame or matrix — stm_stack_rows","text":"data frame matrix resulting row-wise binding         input data.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stack rows together into a data frame or matrix — stm_stack_rows","text":"function stacks provided data frames, matrices, vectors rows using rbind() function. resulting object returned data frame matrix.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_stack_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stack rows together into a data frame or matrix — stm_stack_rows","text":"","code":"A <- matrix(1:4, ncol = 2, byrow = TRUE) print(A) #>      [,1] [,2] #> [1,]    1    2 #> [2,]    3    4 B <- matrix(5:8, ncol = 2, byrow = TRUE) print(B) #>      [,1] [,2] #> [1,]    5    6 #> [2,]    7    8 stm_stack_rows(A, B) #>      [,1] [,2] #> [1,]    1    2 #> [2,]    3    4 #> [3,]    5    6 #> [4,]    7    8"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_symmetric_from_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a symmetric matrix from a vector — stm_symmetric_from_vector","title":"Create a symmetric matrix from a vector — stm_symmetric_from_vector","text":"stm_symmetric_from_vector() generates symmetric matrix given vector. function calls another matrix function create matrix.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_symmetric_from_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a symmetric matrix from a vector — stm_symmetric_from_vector","text":"","code":"stm_symmetric_from_vector(vec)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_symmetric_from_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a symmetric matrix from a vector — stm_symmetric_from_vector","text":"vec numeric vector. vector symmetric matrix created.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_symmetric_from_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a symmetric matrix from a vector — stm_symmetric_from_vector","text":"symmetric matrix created input vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_symmetric_from_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a symmetric matrix from a vector — stm_symmetric_from_vector","text":"function relies stm_matrix_lus() generate          matrix.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_symmetric_from_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a symmetric matrix from a vector — stm_symmetric_from_vector","text":"","code":"v <- c(1, 2, 3, 4, 5, 6) print(v) #> [1] 1 2 3 4 5 6 stm_symmetric_from_vector(v) #>      [,1] [,2] [,3] #> [1,]    2    3    5 #> [2,]    1    2    6 #> [3,]    2    4    2"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Tau (2 * pi) — stm_tau","title":"Tau (2 * pi) — stm_tau","text":"predefined constant tau: 2 * pi.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tau (2 * pi) — stm_tau","text":"","code":"stm_tau"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tau.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tau (2 * pi) — stm_tau","text":"numeric value.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_toeplitz.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Toeplitz matrix — stm_toeplitz","title":"Create a Toeplitz matrix — stm_toeplitz","text":"stm_toeplitz() generates Toeplitz matrix two vectors. Toeplitz matrix matrix descending diagonal left right constant.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_toeplitz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Toeplitz matrix — stm_toeplitz","text":"","code":"stm_toeplitz(vec1, vec2 = vec1)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_toeplitz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Toeplitz matrix — stm_toeplitz","text":"vec1 numeric vector form first column matrix. vec2 numeric vector form first row matrix. specified, defaults vec1.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_toeplitz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Toeplitz matrix — stm_toeplitz","text":"matrix size length(vec1) x length(vec2)         structure Toeplitz matrix.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_toeplitz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Toeplitz matrix — stm_toeplitz","text":"function checks two vectors length.          constructs matrix first column vec1          first row vec2. Subsequent rows filled          following Toeplitz matrix structure.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_toeplitz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Toeplitz matrix — stm_toeplitz","text":"","code":"x <- c(1, 2, 3) y <- c(1, 5, 6, 7) stm_toeplitz(x, y) #>      [,1] [,2] [,3] [,4] #> [1,]    1    5    6    7 #> [2,]    2    1    5    6 #> [3,]    3    2    1    5"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_latex.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert matrix or string to LaTeX format — stm_to_latex","title":"Convert matrix or string to LaTeX format — stm_to_latex","text":"stm_to_latex() converts matrix string LaTeX code rendering mathematical expressions. Supports optional alignment decimal rounding.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_latex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert matrix or string to LaTeX format — stm_to_latex","text":"","code":"stm_to_latex(   x,   align = c(\"right\", \"center\", \"left\"),   symbol = \"$\",   name = NULL,   digits = NULL )"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_latex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert matrix or string to LaTeX format — stm_to_latex","text":"x matrix, vector, string convert LaTeX format. align Optional. alignment matrix columns. Choices \"right\", \"center\", \"left\". Default \"right\". symbol Optional. symbol wrap around LaTeX expression. Default \"$\". name Optional. name equation. provided, appear LaTeX code. digits Optional. number digits round matrix elements . Default NULL (rounding).","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_latex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert matrix or string to LaTeX format — stm_to_latex","text":"LaTeX formatted string.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_latex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert matrix or string to LaTeX format — stm_to_latex","text":"function supports converting matrix rendering string LaTeX equation. also allows custom alignment matrix columns rounding matrix values specified number digits.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_latex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert matrix or string to LaTeX format — stm_to_latex","text":"","code":"stm_to_latex(\"x^2 + y^2 - z^2\") #> [1] \"$\\\\displaystyle x ^{2} + y ^{2} - z ^{2}$\" stm_to_latex(matrix(1:4, nrow = 2), align = \"center\", digits = 2) #> [1] \"$\\\\left[\\\\begin{array}{cc} 1 & 3 \\\\\\\\ 2 & 4 \\\\end{array}\\\\right]$\" stm_to_latex(matrix(1:4, nrow = 2), name = \"A\") #> [1] \"$A = \\\\left[\\\\begin{array}{rr} 1 & 3 \\\\\\\\ 2 & 4 \\\\end{array}\\\\right]$\""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert character columns to numeric — stm_to_numeric","title":"Convert character columns to numeric — stm_to_numeric","text":"stm_to_numeric() converts character columns data frame numeric. attempts convert columns values valid numeric strings numeric values.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert character columns to numeric — stm_to_numeric","text":"","code":"stm_to_numeric(dat, columns = names(dat))"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert character columns to numeric — stm_to_numeric","text":"dat data frame matrix containing columns converted. columns character vector specifying columns converted. Default names(dat), meaning columns considered.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert character columns to numeric — stm_to_numeric","text":"data frame matrix specified columns converted         numeric values.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_numeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert character columns to numeric — stm_to_numeric","text":"function checks column data frame. column          type character contains valid numeric strings,          converted numeric. Otherwise, column remains unchanged.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_to_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert character columns to numeric — stm_to_numeric","text":"","code":"df <- data.frame(   A = c(\"1\", \"2\", \"3\"),   B = c(\"4.5\", \"5.5\", \"6.5\"),   C = c(\"X\", \"Y\", \"Z\") ) str(df) # look at data type column #> 'data.frame':\t3 obs. of  3 variables: #>  $ A: chr  \"1\" \"2\" \"3\" #>  $ B: chr  \"4.5\" \"5.5\" \"6.5\" #>  $ C: chr  \"X\" \"Y\" \"Z\"  df_new <- stm_to_numeric(df) print(df_new) #>   A   B C #> 1 1 4.5 X #> 2 2 5.5 Y #> 3 3 6.5 Z str(df_new) # look at data type column #> 'data.frame':\t3 obs. of  3 variables: #>  $ A: num  1 2 3 #>  $ B: num  4.5 5.5 6.5 #>  $ C: chr  \"X\" \"Y\" \"Z\""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract lower triangular part of a matrix — stm_tril","title":"Extract lower triangular part of a matrix — stm_tril","text":"stm_tril() returns lower triangular part matrix, optionally specified diagonal offset.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract lower triangular part of a matrix — stm_tril","text":"","code":"stm_tril(mat, k = 0)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract lower triangular part of a matrix — stm_tril","text":"mat numeric matrix. k integer indicating diagonal used. Default 0, returns lower triangular part including main diagonal.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract lower triangular part of a matrix — stm_tril","text":"matrix containing lower triangular part mat,         specified diagonal offset.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract lower triangular part of a matrix — stm_tril","text":"function calls stm_tri_lower_upper() extract lower triangular part matrix.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract lower triangular part of a matrix — stm_tril","text":"","code":"A <- matrix(1:16, nrow = 4, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    5    6    7    8 #> [3,]    9   10   11   12 #> [4,]   13   14   15   16 stm_tril(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    5    6    0    0 #> [3,]    9   10   11    0 #> [4,]   13   14   15   16"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril_from_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a lower triangular matrix from a vector — stm_tril_from_vector","title":"Create a lower triangular matrix from a vector — stm_tril_from_vector","text":"stm_tril_from_vector() generates lower triangular matrix given vector. function calls another matrix function generate matrix.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril_from_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a lower triangular matrix from a vector — stm_tril_from_vector","text":"","code":"stm_tril_from_vector(vec)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril_from_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a lower triangular matrix from a vector — stm_tril_from_vector","text":"vec numeric vector. vector lower triangular matrix created.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril_from_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a lower triangular matrix from a vector — stm_tril_from_vector","text":"lower triangular matrix created input vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril_from_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a lower triangular matrix from a vector — stm_tril_from_vector","text":"function relies stm_matrix_lus() generate          matrix.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_tril_from_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a lower triangular matrix from a vector — stm_tril_from_vector","text":"","code":"v <- c(1, 2, 3, 4, 5, 6) print(v) #> [1] 1 2 3 4 5 6 stm_tril_from_vector(v) #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    2    4    0 #> [3,]    3    5    6"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract upper triangular part of a matrix — stm_triu","title":"Extract upper triangular part of a matrix — stm_triu","text":"stm_triu() returns upper triangular part matrix, optionally specified diagonal offset.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract upper triangular part of a matrix — stm_triu","text":"","code":"stm_triu(mat, k = 0)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract upper triangular part of a matrix — stm_triu","text":"mat numeric matrix. k integer indicating diagonal used. Default 0, returns upper triangular part including main diagonal.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract upper triangular part of a matrix — stm_triu","text":"matrix containing upper triangular part mat,         specified diagonal offset.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract upper triangular part of a matrix — stm_triu","text":"function calls stm_tri_lower_upper() extract upper triangular part matrix.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract upper triangular part of a matrix — stm_triu","text":"","code":"A <- matrix(1:16, nrow = 4, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    5    6    7    8 #> [3,]    9   10   11   12 #> [4,]   13   14   15   16 stm_triu(A) #>      [,1] [,2] [,3] [,4] #> [1,]    1    2    3    4 #> [2,]    0    6    7    8 #> [3,]    0    0   11   12 #> [4,]    0    0    0   16"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu_from_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an upper triangular matrix from a vector — stm_triu_from_vector","title":"Create an upper triangular matrix from a vector — stm_triu_from_vector","text":"stm_triu_from_vector() generates upper triangular matrix given vector. function calls another matrix function generate matrix.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu_from_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an upper triangular matrix from a vector — stm_triu_from_vector","text":"","code":"stm_triu_from_vector(vec)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu_from_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an upper triangular matrix from a vector — stm_triu_from_vector","text":"vec numeric vector. vector upper triangular matrix created.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu_from_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an upper triangular matrix from a vector — stm_triu_from_vector","text":"upper triangular matrix created input vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu_from_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an upper triangular matrix from a vector — stm_triu_from_vector","text":"function relies stm_matrix_lus() generate          matrix.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_triu_from_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an upper triangular matrix from a vector — stm_triu_from_vector","text":"","code":"v <- c(1, 2, 3, 4, 5, 6) print(v) #> [1] 1 2 3 4 5 6 stm_triu_from_vector(v) #>      [,1] [,2] [,3] #> [1,]    1    2    4 #> [2,]    0    3    5 #> [3,]    0    0    6"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_unpack.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack elements of a data structure into the environment — stm_unpack","title":"Unpack elements of a data structure into the environment — stm_unpack","text":"stm_unpack() assigns elements list, named vector, data frame specified environment, creating variables element.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_unpack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack elements of a data structure into the environment — stm_unpack","text":"","code":"stm_unpack(dat, output = FALSE, envir = .GlobalEnv)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_unpack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack elements of a data structure into the environment — stm_unpack","text":"dat list, named vector, data frame unpack variables. output Logical. TRUE, displays unpacked variable names values. Default FALSE. envir environment unpack variables. Default .GlobalEnv.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_unpack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack elements of a data structure into the environment — stm_unpack","text":"Invisibly returns NULL. function creates variables         specified environment.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_unpack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unpack elements of a data structure into the environment — stm_unpack","text":"function allows unpack elements supported data structure (list, named vector, data frame) assign variables specified environment. data supported type, error raised.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_unpack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unpack elements of a data structure into the environment — stm_unpack","text":"","code":"lst <- list(a = 10, b = 20, c = 30) print(lst) #> $a #> [1] 10 #>  #> $b #> [1] 20 #>  #> $c #> [1] 30 #>  stm_unpack(lst) a #> [1] 10 b #> [1] 20 c #> [1] 30  v <- c(x = 1, y = 2, z = 3) print(v) #> x y z  #> 1 2 3  stm_unpack(v) a #> [1] 10 b #> [1] 20 c #> [1] 30"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vander.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Vandermonde matrix from a vector — stm_vander","title":"Generate a Vandermonde matrix from a vector — stm_vander","text":"stm_vander() creates Vandermonde matrix given vector. raises element vector power integers 0 n-1, n length vector. user can specify number columns matrix whether matrix increasing order.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vander.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Vandermonde matrix from a vector — stm_vander","text":"","code":"stm_vander(vec, ncols = NULL, is_increasing = FALSE)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vander.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Vandermonde matrix from a vector — stm_vander","text":"vec numeric vector Vandermonde matrix created. ncols Optional. integer specifying number columns matrix. Default NULL, keeps columns. is_increasing logical value indicating whether matrix increasing order. Default FALSE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vander.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Vandermonde matrix from a vector — stm_vander","text":"matrix representing Vandermonde matrix, either default         order reversed is_increasing = TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vander.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Vandermonde matrix from a vector — stm_vander","text":"function generates Vandermonde matrix using outer product, elements vec raised successive powers 0 n-1. user can specify number columns using ncols parameter. matrix can also returned increasing order is_increasing set TRUE.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vander.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Vandermonde matrix from a vector — stm_vander","text":"","code":"v <- c(1, 2, 3, 4) print(v) #> [1] 1 2 3 4 stm_vander(v) #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    8    4    2    1 #> [3,]   27    9    3    1 #> [4,]   64   16    4    1 stm_vander(v, is_increasing = TRUE) #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    2    4    8 #> [3,]    1    3    9   27 #> [4,]    1    4   16   64"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vector_to_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert vector to a character string — stm_vector_to_char","title":"Convert vector to a character string — stm_vector_to_char","text":"stm_vector_to_char() takes vector converts character string. Optionally, is_stop TRUE, checks specified character vector raises error .","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vector_to_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert vector to a character string — stm_vector_to_char","text":"","code":"stm_vector_to_char(vec, find_char, is_stop = FALSE, par_name = \"vec\")"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vector_to_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert vector to a character string — stm_vector_to_char","text":"vec vector values converted character string. vector assumed contain non-numeric values. find_char character check vector. is_stop TRUE, function stop find_char vec. is_stop logical value. TRUE, error raised find_char found vec. par_name string used error warning messages refer parameter. Defaults \"vec\".","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vector_to_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert vector to a character string — stm_vector_to_char","text":"function returns vector single concatenated character         string, stops is_stop TRUE character         found vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vector_to_char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert vector to a character string — stm_vector_to_char","text":"function first checks whether input vector valid concatenates single string. is_stop TRUE, function checks whether find_char vector stops execution .","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_vector_to_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert vector to a character string — stm_vector_to_char","text":"","code":"fruits <- c(\"apple\", \"banana\", \"cherry\") print(fruits) #> [1] \"apple\"  \"banana\" \"cherry\" stm_vector_to_char(fruits, find_char = \"apple\") #> [1] \"apple', 'banana', 'cherry\" colors <- c(\"red\", \"blue\", \"green\") print(colors) #> [1] \"red\"   \"blue\"  \"green\" stm_vector_to_char(colors, find_char = \"Blue\") #> [1] \"red', 'blue', 'green\""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a zero matrix — stm_zeros","title":"Generate a zero matrix — stm_zeros","text":"Returns matrix filled zeros, dimensions specified user. dimensions provided, 1 x 1 zero matrix returned.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a zero matrix — stm_zeros","text":"","code":"stm_zeros(nrows, ncols = nrows)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a zero matrix — stm_zeros","text":"nrows Optional. number rows matrix. Defaults 1 specified. Must positive integer. ncols Optional. number columns matrix. NULL, defaults value nrows. Must also positive integer.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a zero matrix — stm_zeros","text":"matrix filled zeros, dimensions defined nrows         ncols. Returns empty matrix dimensions         (0, 0) either dimension zero.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a zero matrix — stm_zeros","text":"","code":"stm_zeros(nrows = 4) #>      [,1] [,2] [,3] [,4] #> [1,]    0    0    0    0 #> [2,]    0    0    0    0 #> [3,]    0    0    0    0 #> [4,]    0    0    0    0 stm_zeros(nrows = 3, ncols = 3) #>      [,1] [,2] [,3] #> [1,]    0    0    0 #> [2,]    0    0    0 #> [3,]    0    0    0 stm_zeros(nrows = 2, ncols = 4) #>      [,1] [,2] [,3] [,4] #> [1,]    0    0    0    0 #> [2,]    0    0    0    0"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a matrix or vector of zeros like an existing matrix or vector — stm_zeros_like","title":"Generate a matrix or vector of zeros like an existing matrix or vector — stm_zeros_like","text":"stm_zeros_like() generates matrix vector zeros matches dimensions provided input matrix vector.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a matrix or vector of zeros like an existing matrix or vector — stm_zeros_like","text":"","code":"stm_zeros_like(vmat)"},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a matrix or vector of zeros like an existing matrix or vector — stm_zeros_like","text":"vmat matrix vector whose dimensions used generate matrix vector zeros.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a matrix or vector of zeros like an existing matrix or vector — stm_zeros_like","text":"matrix vector dimensions vmat, filled         zeros.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros_like.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a matrix or vector of zeros like an existing matrix or vector — stm_zeros_like","text":"function checks validity input vmat, converting matrix vector. generates matrix zeros size vmat.","code":""},{"path":[]},{"path":"https://stemxresearch.github.io/rstem/reference/stm_zeros_like.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a matrix or vector of zeros like an existing matrix or vector — stm_zeros_like","text":"","code":"A <- matrix(1:12, nrow = 3, byrow = TRUE) stm_zeros_like(A) #>      [,1] [,2] [,3] [,4] #> [1,]    0    0    0    0 #> [2,]    0    0    0    0 #> [3,]    0    0    0    0 stm_zeros_like(c(1, 2, 3)) #>      [,1] #> [1,]    0 #> [2,]    0 #> [3,]    0"},{"path":"https://stemxresearch.github.io/rstem/reference/swap.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap elements in a vector, rows, or columns — stm_swap_vector","title":"Swap elements in a vector, rows, or columns — stm_swap_vector","text":"stm_swap...() set functions swap elements specified indices vector, rows matrix data frame, columns matrix data frame.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/swap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap elements in a vector, rows, or columns — stm_swap_vector","text":"","code":"stm_swap_vector(dat, i, j)  stm_swap_rows(dat, i, j)  stm_swap_cols(dat, i, j)"},{"path":"https://stemxresearch.github.io/rstem/reference/swap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap elements in a vector, rows, or columns — stm_swap_vector","text":"dat input vector, matrix, data frame. stm_swap_vector, vector. stm_swap_rows stm_swap_cols, matrix data frame. index first element (row/column) swap. j index second element (row/column) swap.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/swap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap elements in a vector, rows, or columns — stm_swap_vector","text":"vector, matrix, data frame specified elements swapped.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/swap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap elements in a vector, rows, or columns — stm_swap_vector","text":"","code":"# vector v <- c(1, 2, 3, 4, 5) print(v) #> [1] 1 2 3 4 5 stm_swap_vector(v, i = 2, j = 4) #> [1] 1 4 3 2 5  # swap matrix rows A <- matrix(1:9, ncol = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    4    5    6 #> [3,]    7    8    9 stm_swap_rows(A, 1, 3) #>      [,1] [,2] [,3] #> [1,]    7    8    9 #> [2,]    4    5    6 #> [3,]    1    2    3  # swap matrix columns A <- matrix(1:9, ncol = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    4    5    6 #> [3,]    7    8    9 stm_swap_cols(A, 1, 3) #>      [,1] [,2] [,3] #> [1,]    3    2    1 #> [2,]    6    5    4 #> [3,]    9    8    7"},{"path":"https://stemxresearch.github.io/rstem/reference/transpose.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose data frame, matrix, or tibble — stm_transpose","title":"Transpose data frame, matrix, or tibble — stm_transpose","text":"stm_transpose() transposes data frame, matrix, tibble, converting appropriate format transposition.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/transpose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose data frame, matrix, or tibble — stm_transpose","text":"","code":"stm_transpose(dat)  stm_t(dat)"},{"path":"https://stemxresearch.github.io/rstem/reference/transpose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose data frame, matrix, or tibble — stm_transpose","text":"dat matrix, data frame, tibble transposed.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/transpose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose data frame, matrix, or tibble — stm_transpose","text":"transposed dat, either matrix, data frame,         tibble.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/transpose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transpose data frame, matrix, or tibble — stm_transpose","text":"function first checks class dat transposes accordingly. data frame, converts standard data frame transposition. tibble, also cleans column names using janitor::clean_names(). data matrix vector, directly transposed.","code":""},{"path":"https://stemxresearch.github.io/rstem/reference/transpose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transpose data frame, matrix, or tibble — stm_transpose","text":"","code":"# Matrix example A <- matrix(11:22, nrow = 3, byrow = TRUE) print(A) #>      [,1] [,2] [,3] [,4] #> [1,]   11   12   13   14 #> [2,]   15   16   17   18 #> [3,]   19   20   21   22 stm_transpose(A) #>      [,1] [,2] [,3] #> [1,]   11   15   19 #> [2,]   12   16   20 #> [3,]   13   17   21 #> [4,]   14   18   22  # Data frame example df <- data.frame(   A = c(1, 2, 3),   B = c(4, 5, 6) ) print(df) #>   A B #> 1 1 4 #> 2 2 5 #> 3 3 6 stm_transpose(df) #>   V1 V2 V3 #> A  1  2  3 #> B  4  5  6  # Tibble example library(tibble) tbl <- tibble(   A = c(1, 2, 3),   B = c(4, 5, 6) ) print(tbl) #> # A tibble: 3 × 2 #>       A     B #>   <dbl> <dbl> #> 1     1     4 #> 2     2     5 #> 3     3     6 stm_transpose(tbl) #> # A tibble: 2 × 3 #>       x   x_2   x_3 #>   <dbl> <dbl> <dbl> #> 1     1     2     3 #> 2     4     5     6"},{"path":"https://stemxresearch.github.io/rstem/news/index.html","id":"rstemlab-010","dir":"Changelog","previous_headings":"","what":"rstemlab 0.1.0","title":"rstemlab 0.1.0","text":"Original first release.","code":""}]
